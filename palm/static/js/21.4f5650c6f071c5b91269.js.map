{"version":3,"sources":["webpack:///./node_modules/cropperjs/dist/cropper.esm.js","webpack:///src/views/user/personalImage.vue","webpack:///./src/views/user/personalImage.vue?ee2b","webpack:///./src/views/user/personalImage.vue","webpack:///./src/views/user/personalImage.vue?c3a9","webpack:///./src/views/user/personalImage.vue?4ffd"],"names":["isNumber","value","cropper_esm_isNaN","isUndefined","isObject","_typeof","isPlainObject","_constructor","constructor","prototype","cropper_esm_hasOwnProperty","call","e","isFunction","forEach","data","callback","Array","isArray","length","i","Object","keys","key","normalizeDecimalNumber","times","arguments","undefined","REGEXP_DECIMALS","test","Math","round","setStyle","element","styles","style","property","REGEXP_SUFFIX","addClass","elem","classList","add","className","trim","indexOf","removeClass","remove","replace","toggleClass","added","hyphenate","REGEXP_HYPHENATE","toLowerCase","getData","name","dataset","getAttribute","setData","setAttribute","removeData","removeAttribute","removeListener","type","listener","options","handler","split","REGEXP_SPACES","event","onceSupported","listeners","removeEventListener","addListener","_handler","once","_element$listeners","_len2","args","_key2","apply","addEventListener","dispatchEvent","Event","CustomEvent","detail","bubbles","cancelable","document","createEvent","initCustomEvent","getOffset","box","getBoundingClientRect","left","window","pageXOffset","documentElement","clientLeft","top","pageYOffset","clientTop","isCrossOriginURL","url","parts","match","REGEXP_ORIGINS","cropper_esm_location","protocol","hostname","port","addTimestamp","timestamp","Date","getTime","getTransforms","_ref","rotate","scaleX","scaleY","translateX","translateY","values","push","transform","join","WebkitTransform","msTransform","getPointer","_ref2","endOnly","pageX","pageY","end","endX","endY","cropper_esm_assign","startX","startY","getAdjustedSizes","_ref4","aspectRatio","height","width","isValidNumber","cropper_esm_isFinite","adjustedWidth","getOrientation","arrayBuffer","dataView","DataView","orientation","littleEndian","app1Start","ifdStart","getUint8","byteLength","offset","tiffOffset","start","str","fromCharCode","getStringFromCharCode","endianness","getUint16","firstIFDOffset","getUint32","_length","_offset","setUint16","IN_BROWSER","WINDOW","NAMESPACE","CLASS_CROP","CLASS_DISABLED","CLASS_HIDDEN","CLASS_MODAL","CLASS_MOVE","EVENT_POINTER_DOWN","PointerEvent","EVENT_POINTER_MOVE","EVENT_POINTER_UP","EVENT_WHEEL","REGEXP_ACTIONS","REGEXP_DATA_URL","REGEXP_DATA_URL_JPEG","REGEXP_TAG_NAME","DEFAULTS","viewMode","dragMode","NaN","preview","responsive","restore","checkCrossOrigin","checkOrientation","modal","guides","center","highlight","background","autoCrop","autoCropArea","movable","rotatable","scalable","zoomable","zoomOnTouch","zoomOnWheel","wheelZoomRatio","cropBoxMovable","cropBoxResizable","toggleDragModeOnDblclick","minCanvasWidth","minCanvasHeight","minCropBoxWidth","minCropBoxHeight","minContainerWidth","minContainerHeight","ready","cropstart","cropmove","cropend","crop","zoom","Symbol","iterator","obj","classCallCheck","instance","Constructor","TypeError","createClass","defineProperties","target","props","descriptor","enumerable","configurable","writable","defineProperty","protoProps","staticProps","toConsumableArray","arr","arr2","from","Number","isNaN","hasOwnProperty","assign","_len","_key","arg","supported","get","set","location","isFinite","String","REGEXP_DATA_URL_HEAD","render","this","initContainer","initCanvas","initCropBox","renderCanvas","cropped","renderCropBox","container","cropper","containerData","max","offsetWidth","offsetHeight","imageData","rotated","abs","naturalWidth","naturalHeight","canvasWidth","canvasHeight","canvasData","oldLeft","oldTop","limited","limitCanvas","initialImageData","initialCanvasData","sizeLimited","positionLimited","cropBoxData","_getAdjustedSizes","minWidth","minHeight","maxWidth","Infinity","maxHeight","newCanvasLeft","newCanvasTop","minLeft","min","minTop","maxLeft","maxTop","changed","transformed","_getRotatedSizes","_ref5","degree","arc","PI","sinArc","sin","cosArc","cos","newWidth","newHeight","getRotatedSizes","canvas","renderImage","limitCropBox","image","output","initialCropBoxData","maxCropBoxWidth","maxCropBoxHeight","face","cropBox","disabled","initPreview","crossOrigin","crossOriginUrl","createElement","src","viewBox","appendChild","viewBoxImage","previews","ownerDocument","querySelectorAll","querySelector","el","img","html","innerHTML","cssText","resetPreview","cropBoxWidth","cropBoxHeight","originalWidth","originalHeight","ratio","getElementsByTagName","events","bind","onCropStart","cropStart","onWheel","wheel","onDblclick","dblclick","onCropMove","cropMove","onCropEnd","cropEnd","onResize","resize","unbind","handlers","getCanvasData","getCropBoxData","setCanvasData","n","setCropBoxData","setDragMode","contains","hasClass","dragBox","_this","delta","preventDefault","wheeling","setTimeout","deltaY","wheelDelta","pointers","action","changedTouches","touch","identifier","pointerId","originalEvent","cropping","change","right","bottom","renderable","shiftKey","pointer","range","x","y","check","side","move","pointers2","ratios","pointer2","x1","y1","x2","y2","z1","sqrt","sort","a","b","getMaxZoomRatio","p","methods","reset","clear","hasSameSize","isImg","replaced","uncreate","load","enable","disable","destroy","originalUrl","offsetX","offsetY","_canvasData","moveTo","_originalEvent","zoomTo","pivot","oldRatio","count","_ref3","getPointersCenter","rotateTo","_scaleX","scale","_scaleY","rounded","getContainerData","getImageData","sized","widthChanged","heightChanged","getCroppedCanvas","HTMLCanvasElement","source","_ref6","_ref7","_ref8","imageNaturalWidth","imageNaturalHeight","_ref6$rotate","_ref6$scaleX","_ref6$scaleY","_ref8$fillColor","fillColor","_ref8$imageSmoothingE","imageSmoothingEnabled","_ref8$imageSmoothingQ","imageSmoothingQuality","_ref8$maxWidth","_ref8$maxHeight","_ref8$minWidth","_ref8$minHeight","context","getContext","maxSizes","minSizes","destWidth","destHeight","params","fillStyle","fillRect","save","translate","drawImage","concat","map","param","floor","getSourceCanvas","_getData","initialX","initialY","initialWidth","initialHeight","_options$imageSmoothi","sourceWidth","sourceHeight","srcX","srcY","srcWidth","srcHeight","dstX","dstY","dstWidth","dstHeight","setAspectRatio","mode","croppable","AnotherCropper","Cropper","tagName","Error","reloading","sizing","init","toDataURL","ArrayBuffer","read","dataURL","base64","binary","atob","uint8","Uint8Array","charCodeAt","dataURLToArrayBuffer","clone","xhr","XMLHttpRequest","done","ontimeout","onabort","onerror","onload","response","open","responseType","withCredentials","send","mimeType","btoa","arrayBufferToDataURL","_parseOrientation","parseOrientation","stop","onStart","onStop","complete","timeout","parentNode","insertBefore","nextSibling","_this2","IS_SAFARI","navigator","userAgent","build","sizingImage","body","removeChild","template","getElementsByClassName","unbuild","abort","clearTimeout","cropper_esm","personalImage","imageInfo","userImage","imgFile","res","close","tokenOutOfDate","user_personalImage","_vm","_h","$createElement","_c","_self","staticClass","ref","attrs","alt","_v","on","click","$event","$router","go","uploadImage","staticRenderFns","Component","__webpack_require__","normalizeComponent","ssrContext","__webpack_exports__","module","exports","version","sources","names","mappings","file","sourcesContent","sourceRoot","content","locals"],"mappings":"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","file":"static/js/21.4f5650c6f071c5b91269.js","sourcesContent":["/*!\n * Cropper.js v1.3.3\n * https://github.com/fengyuanchen/cropperjs\n *\n * Copyright (c) 2015-2018 Chen Fengyuan\n * Released under the MIT license\n *\n * Date: 2018-03-18T03:19:54.147Z\n */\n\nvar IN_BROWSER = typeof window !== 'undefined';\nvar WINDOW = IN_BROWSER ? window : {};\nvar NAMESPACE = 'cropper';\n\n// Actions\nvar ACTION_ALL = 'all';\nvar ACTION_CROP = 'crop';\nvar ACTION_MOVE = 'move';\nvar ACTION_ZOOM = 'zoom';\nvar ACTION_EAST = 'e';\nvar ACTION_WEST = 'w';\nvar ACTION_SOUTH = 's';\nvar ACTION_NORTH = 'n';\nvar ACTION_NORTH_EAST = 'ne';\nvar ACTION_NORTH_WEST = 'nw';\nvar ACTION_SOUTH_EAST = 'se';\nvar ACTION_SOUTH_WEST = 'sw';\n\n// Classes\nvar CLASS_CROP = NAMESPACE + '-crop';\nvar CLASS_DISABLED = NAMESPACE + '-disabled';\nvar CLASS_HIDDEN = NAMESPACE + '-hidden';\nvar CLASS_HIDE = NAMESPACE + '-hide';\nvar CLASS_INVISIBLE = NAMESPACE + '-invisible';\nvar CLASS_MODAL = NAMESPACE + '-modal';\nvar CLASS_MOVE = NAMESPACE + '-move';\n\n// Data keys\nvar DATA_ACTION = 'action';\nvar DATA_PREVIEW = 'preview';\n\n// Drag modes\nvar DRAG_MODE_CROP = 'crop';\nvar DRAG_MODE_MOVE = 'move';\nvar DRAG_MODE_NONE = 'none';\n\n// Events\nvar EVENT_CROP = 'crop';\nvar EVENT_CROP_END = 'cropend';\nvar EVENT_CROP_MOVE = 'cropmove';\nvar EVENT_CROP_START = 'cropstart';\nvar EVENT_DBLCLICK = 'dblclick';\nvar EVENT_LOAD = 'load';\nvar EVENT_POINTER_DOWN = WINDOW.PointerEvent ? 'pointerdown' : 'touchstart mousedown';\nvar EVENT_POINTER_MOVE = WINDOW.PointerEvent ? 'pointermove' : 'touchmove mousemove';\nvar EVENT_POINTER_UP = WINDOW.PointerEvent ? 'pointerup pointercancel' : 'touchend touchcancel mouseup';\nvar EVENT_READY = 'ready';\nvar EVENT_RESIZE = 'resize';\nvar EVENT_WHEEL = 'wheel mousewheel DOMMouseScroll';\nvar EVENT_ZOOM = 'zoom';\n\n// RegExps\nvar REGEXP_ACTIONS = /^(?:e|w|s|n|se|sw|ne|nw|all|crop|move|zoom)$/;\nvar REGEXP_DATA_URL = /^data:/;\nvar REGEXP_DATA_URL_JPEG = /^data:image\\/jpeg;base64,/;\nvar REGEXP_TAG_NAME = /^(?:img|canvas)$/i;\n\nvar DEFAULTS = {\n  // Define the view mode of the cropper\n  viewMode: 0, // 0, 1, 2, 3\n\n  // Define the dragging mode of the cropper\n  dragMode: DRAG_MODE_CROP, // 'crop', 'move' or 'none'\n\n  // Define the aspect ratio of the crop box\n  aspectRatio: NaN,\n\n  // An object with the previous cropping result data\n  data: null,\n\n  // A selector for adding extra containers to preview\n  preview: '',\n\n  // Re-render the cropper when resize the window\n  responsive: true,\n\n  // Restore the cropped area after resize the window\n  restore: true,\n\n  // Check if the current image is a cross-origin image\n  checkCrossOrigin: true,\n\n  // Check the current image's Exif Orientation information\n  checkOrientation: true,\n\n  // Show the black modal\n  modal: true,\n\n  // Show the dashed lines for guiding\n  guides: true,\n\n  // Show the center indicator for guiding\n  center: true,\n\n  // Show the white modal to highlight the crop box\n  highlight: true,\n\n  // Show the grid background\n  background: true,\n\n  // Enable to crop the image automatically when initialize\n  autoCrop: true,\n\n  // Define the percentage of automatic cropping area when initializes\n  autoCropArea: 0.8,\n\n  // Enable to move the image\n  movable: true,\n\n  // Enable to rotate the image\n  rotatable: true,\n\n  // Enable to scale the image\n  scalable: true,\n\n  // Enable to zoom the image\n  zoomable: true,\n\n  // Enable to zoom the image by dragging touch\n  zoomOnTouch: true,\n\n  // Enable to zoom the image by wheeling mouse\n  zoomOnWheel: true,\n\n  // Define zoom ratio when zoom the image by wheeling mouse\n  wheelZoomRatio: 0.1,\n\n  // Enable to move the crop box\n  cropBoxMovable: true,\n\n  // Enable to resize the crop box\n  cropBoxResizable: true,\n\n  // Toggle drag mode between \"crop\" and \"move\" when click twice on the cropper\n  toggleDragModeOnDblclick: true,\n\n  // Size limitation\n  minCanvasWidth: 0,\n  minCanvasHeight: 0,\n  minCropBoxWidth: 0,\n  minCropBoxHeight: 0,\n  minContainerWidth: 200,\n  minContainerHeight: 100,\n\n  // Shortcuts of events\n  ready: null,\n  cropstart: null,\n  cropmove: null,\n  cropend: null,\n  crop: null,\n  zoom: null\n};\n\nvar TEMPLATE = '<div class=\"cropper-container\" touch-action=\"none\">' + '<div class=\"cropper-wrap-box\">' + '<div class=\"cropper-canvas\"></div>' + '</div>' + '<div class=\"cropper-drag-box\"></div>' + '<div class=\"cropper-crop-box\">' + '<span class=\"cropper-view-box\"></span>' + '<span class=\"cropper-dashed dashed-h\"></span>' + '<span class=\"cropper-dashed dashed-v\"></span>' + '<span class=\"cropper-center\"></span>' + '<span class=\"cropper-face\"></span>' + '<span class=\"cropper-line line-e\" data-action=\"e\"></span>' + '<span class=\"cropper-line line-n\" data-action=\"n\"></span>' + '<span class=\"cropper-line line-w\" data-action=\"w\"></span>' + '<span class=\"cropper-line line-s\" data-action=\"s\"></span>' + '<span class=\"cropper-point point-e\" data-action=\"e\"></span>' + '<span class=\"cropper-point point-n\" data-action=\"n\"></span>' + '<span class=\"cropper-point point-w\" data-action=\"w\"></span>' + '<span class=\"cropper-point point-s\" data-action=\"s\"></span>' + '<span class=\"cropper-point point-ne\" data-action=\"ne\"></span>' + '<span class=\"cropper-point point-nw\" data-action=\"nw\"></span>' + '<span class=\"cropper-point point-sw\" data-action=\"sw\"></span>' + '<span class=\"cropper-point point-se\" data-action=\"se\"></span>' + '</div>' + '</div>';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar toConsumableArray = function (arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];\n\n    return arr2;\n  } else {\n    return Array.from(arr);\n  }\n};\n\n/**\n * Check if the given value is not a number.\n */\nvar isNaN = Number.isNaN || WINDOW.isNaN;\n\n/**\n * Check if the given value is a number.\n * @param {*} value - The value to check.\n * @returns {boolean} Returns `true` if the given value is a number, else `false`.\n */\nfunction isNumber(value) {\n  return typeof value === 'number' && !isNaN(value);\n}\n\n/**\n * Check if the given value is undefined.\n * @param {*} value - The value to check.\n * @returns {boolean} Returns `true` if the given value is undefined, else `false`.\n */\nfunction isUndefined(value) {\n  return typeof value === 'undefined';\n}\n\n/**\n * Check if the given value is an object.\n * @param {*} value - The value to check.\n * @returns {boolean} Returns `true` if the given value is an object, else `false`.\n */\nfunction isObject(value) {\n  return (typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object' && value !== null;\n}\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\n/**\n * Check if the given value is a plain object.\n * @param {*} value - The value to check.\n * @returns {boolean} Returns `true` if the given value is a plain object, else `false`.\n */\n\nfunction isPlainObject(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n\n  try {\n    var _constructor = value.constructor;\n    var prototype = _constructor.prototype;\n\n\n    return _constructor && prototype && hasOwnProperty.call(prototype, 'isPrototypeOf');\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Check if the given value is a function.\n * @param {*} value - The value to check.\n * @returns {boolean} Returns `true` if the given value is a function, else `false`.\n */\nfunction isFunction(value) {\n  return typeof value === 'function';\n}\n\n/**\n * Iterate the given data.\n * @param {*} data - The data to iterate.\n * @param {Function} callback - The process function for each element.\n * @returns {*} The original data.\n */\nfunction forEach(data, callback) {\n  if (data && isFunction(callback)) {\n    if (Array.isArray(data) || isNumber(data.length) /* array-like */) {\n        var length = data.length;\n\n        var i = void 0;\n\n        for (i = 0; i < length; i += 1) {\n          if (callback.call(data, data[i], i, data) === false) {\n            break;\n          }\n        }\n      } else if (isObject(data)) {\n      Object.keys(data).forEach(function (key) {\n        callback.call(data, data[key], key, data);\n      });\n    }\n  }\n\n  return data;\n}\n\n/**\n * Extend the given object.\n * @param {*} obj - The object to be extended.\n * @param {*} args - The rest objects which will be merged to the first object.\n * @returns {Object} The extended object.\n */\nvar assign = Object.assign || function assign(obj) {\n  for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    args[_key - 1] = arguments[_key];\n  }\n\n  if (isObject(obj) && args.length > 0) {\n    args.forEach(function (arg) {\n      if (isObject(arg)) {\n        Object.keys(arg).forEach(function (key) {\n          obj[key] = arg[key];\n        });\n      }\n    });\n  }\n\n  return obj;\n};\n\nvar REGEXP_DECIMALS = /\\.\\d*(?:0|9){12}\\d*$/i;\n\n/**\n * Normalize decimal number.\n * Check out {@link http://0.30000000000000004.com/ }\n * @param {number} value - The value to normalize.\n * @param {number} [times=100000000000] - The times for normalizing.\n * @returns {number} Returns the normalized number.\n */\nfunction normalizeDecimalNumber(value) {\n  var times = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 100000000000;\n\n  return REGEXP_DECIMALS.test(value) ? Math.round(value * times) / times : value;\n}\n\nvar REGEXP_SUFFIX = /^(?:width|height|left|top|marginLeft|marginTop)$/;\n\n/**\n * Apply styles to the given element.\n * @param {Element} element - The target element.\n * @param {Object} styles - The styles for applying.\n */\nfunction setStyle(element, styles) {\n  var style = element.style;\n\n\n  forEach(styles, function (value, property) {\n    if (REGEXP_SUFFIX.test(property) && isNumber(value)) {\n      value += 'px';\n    }\n\n    style[property] = value;\n  });\n}\n\n/**\n * Check if the given element has a special class.\n * @param {Element} element - The element to check.\n * @param {string} value - The class to search.\n * @returns {boolean} Returns `true` if the special class was found.\n */\nfunction hasClass(element, value) {\n  return element.classList ? element.classList.contains(value) : element.className.indexOf(value) > -1;\n}\n\n/**\n * Add classes to the given element.\n * @param {Element} element - The target element.\n * @param {string} value - The classes to be added.\n */\nfunction addClass(element, value) {\n  if (!value) {\n    return;\n  }\n\n  if (isNumber(element.length)) {\n    forEach(element, function (elem) {\n      addClass(elem, value);\n    });\n    return;\n  }\n\n  if (element.classList) {\n    element.classList.add(value);\n    return;\n  }\n\n  var className = element.className.trim();\n\n  if (!className) {\n    element.className = value;\n  } else if (className.indexOf(value) < 0) {\n    element.className = className + ' ' + value;\n  }\n}\n\n/**\n * Remove classes from the given element.\n * @param {Element} element - The target element.\n * @param {string} value - The classes to be removed.\n */\nfunction removeClass(element, value) {\n  if (!value) {\n    return;\n  }\n\n  if (isNumber(element.length)) {\n    forEach(element, function (elem) {\n      removeClass(elem, value);\n    });\n    return;\n  }\n\n  if (element.classList) {\n    element.classList.remove(value);\n    return;\n  }\n\n  if (element.className.indexOf(value) >= 0) {\n    element.className = element.className.replace(value, '');\n  }\n}\n\n/**\n * Add or remove classes from the given element.\n * @param {Element} element - The target element.\n * @param {string} value - The classes to be toggled.\n * @param {boolean} added - Add only.\n */\nfunction toggleClass(element, value, added) {\n  if (!value) {\n    return;\n  }\n\n  if (isNumber(element.length)) {\n    forEach(element, function (elem) {\n      toggleClass(elem, value, added);\n    });\n    return;\n  }\n\n  // IE10-11 doesn't support the second parameter of `classList.toggle`\n  if (added) {\n    addClass(element, value);\n  } else {\n    removeClass(element, value);\n  }\n}\n\nvar REGEXP_HYPHENATE = /([a-z\\d])([A-Z])/g;\n\n/**\n * Transform the given string from camelCase to kebab-case\n * @param {string} value - The value to transform.\n * @returns {string} The transformed value.\n */\nfunction hyphenate(value) {\n  return value.replace(REGEXP_HYPHENATE, '$1-$2').toLowerCase();\n}\n\n/**\n * Get data from the given element.\n * @param {Element} element - The target element.\n * @param {string} name - The data key to get.\n * @returns {string} The data value.\n */\nfunction getData(element, name) {\n  if (isObject(element[name])) {\n    return element[name];\n  } else if (element.dataset) {\n    return element.dataset[name];\n  }\n\n  return element.getAttribute('data-' + hyphenate(name));\n}\n\n/**\n * Set data to the given element.\n * @param {Element} element - The target element.\n * @param {string} name - The data key to set.\n * @param {string} data - The data value.\n */\nfunction setData(element, name, data) {\n  if (isObject(data)) {\n    element[name] = data;\n  } else if (element.dataset) {\n    element.dataset[name] = data;\n  } else {\n    element.setAttribute('data-' + hyphenate(name), data);\n  }\n}\n\n/**\n * Remove data from the given element.\n * @param {Element} element - The target element.\n * @param {string} name - The data key to remove.\n */\nfunction removeData(element, name) {\n  if (isObject(element[name])) {\n    try {\n      delete element[name];\n    } catch (e) {\n      element[name] = undefined;\n    }\n  } else if (element.dataset) {\n    // #128 Safari not allows to delete dataset property\n    try {\n      delete element.dataset[name];\n    } catch (e) {\n      element.dataset[name] = undefined;\n    }\n  } else {\n    element.removeAttribute('data-' + hyphenate(name));\n  }\n}\n\nvar REGEXP_SPACES = /\\s\\s*/;\nvar onceSupported = function () {\n  var supported = false;\n\n  if (IN_BROWSER) {\n    var once = false;\n    var listener = function listener() {};\n    var options = Object.defineProperty({}, 'once', {\n      get: function get$$1() {\n        supported = true;\n        return once;\n      },\n\n\n      /**\n       * This setter can fix a `TypeError` in strict mode\n       * {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Errors/Getter_only}\n       * @param {boolean} value - The value to set\n       */\n      set: function set$$1(value) {\n        once = value;\n      }\n    });\n\n    WINDOW.addEventListener('test', listener, options);\n    WINDOW.removeEventListener('test', listener, options);\n  }\n\n  return supported;\n}();\n\n/**\n * Remove event listener from the target element.\n * @param {Element} element - The event target.\n * @param {string} type - The event type(s).\n * @param {Function} listener - The event listener.\n * @param {Object} options - The event options.\n */\nfunction removeListener(element, type, listener) {\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n\n  var handler = listener;\n\n  type.trim().split(REGEXP_SPACES).forEach(function (event) {\n    if (!onceSupported) {\n      var listeners = element.listeners;\n\n\n      if (listeners && listeners[event] && listeners[event][listener]) {\n        handler = listeners[event][listener];\n        delete listeners[event][listener];\n\n        if (Object.keys(listeners[event]).length === 0) {\n          delete listeners[event];\n        }\n\n        if (Object.keys(listeners).length === 0) {\n          delete element.listeners;\n        }\n      }\n    }\n\n    element.removeEventListener(event, handler, options);\n  });\n}\n\n/**\n * Add event listener to the target element.\n * @param {Element} element - The event target.\n * @param {string} type - The event type(s).\n * @param {Function} listener - The event listener.\n * @param {Object} options - The event options.\n */\nfunction addListener(element, type, listener) {\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n\n  var _handler = listener;\n\n  type.trim().split(REGEXP_SPACES).forEach(function (event) {\n    if (options.once && !onceSupported) {\n      var _element$listeners = element.listeners,\n          listeners = _element$listeners === undefined ? {} : _element$listeners;\n\n\n      _handler = function handler() {\n        for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n          args[_key2] = arguments[_key2];\n        }\n\n        delete listeners[event][listener];\n        element.removeEventListener(event, _handler, options);\n        listener.apply(element, args);\n      };\n\n      if (!listeners[event]) {\n        listeners[event] = {};\n      }\n\n      if (listeners[event][listener]) {\n        element.removeEventListener(event, listeners[event][listener], options);\n      }\n\n      listeners[event][listener] = _handler;\n      element.listeners = listeners;\n    }\n\n    element.addEventListener(event, _handler, options);\n  });\n}\n\n/**\n * Dispatch event on the target element.\n * @param {Element} element - The event target.\n * @param {string} type - The event type(s).\n * @param {Object} data - The additional event data.\n * @returns {boolean} Indicate if the event is default prevented or not.\n */\nfunction dispatchEvent(element, type, data) {\n  var event = void 0;\n\n  // Event and CustomEvent on IE9-11 are global objects, not constructors\n  if (isFunction(Event) && isFunction(CustomEvent)) {\n    event = new CustomEvent(type, {\n      detail: data,\n      bubbles: true,\n      cancelable: true\n    });\n  } else {\n    event = document.createEvent('CustomEvent');\n    event.initCustomEvent(type, true, true, data);\n  }\n\n  return element.dispatchEvent(event);\n}\n\n/**\n * Get the offset base on the document.\n * @param {Element} element - The target element.\n * @returns {Object} The offset data.\n */\nfunction getOffset(element) {\n  var box = element.getBoundingClientRect();\n\n  return {\n    left: box.left + (window.pageXOffset - document.documentElement.clientLeft),\n    top: box.top + (window.pageYOffset - document.documentElement.clientTop)\n  };\n}\n\nvar location = WINDOW.location;\n\nvar REGEXP_ORIGINS = /^(https?:)\\/\\/([^:/?#]+):?(\\d*)/i;\n\n/**\n * Check if the given URL is a cross origin URL.\n * @param {string} url - The target URL.\n * @returns {boolean} Returns `true` if the given URL is a cross origin URL, else `false`.\n */\nfunction isCrossOriginURL(url) {\n  var parts = url.match(REGEXP_ORIGINS);\n\n  return parts && (parts[1] !== location.protocol || parts[2] !== location.hostname || parts[3] !== location.port);\n}\n\n/**\n * Add timestamp to the given URL.\n * @param {string} url - The target URL.\n * @returns {string} The result URL.\n */\nfunction addTimestamp(url) {\n  var timestamp = 'timestamp=' + new Date().getTime();\n\n  return url + (url.indexOf('?') === -1 ? '?' : '&') + timestamp;\n}\n\n/**\n * Get transforms base on the given object.\n * @param {Object} obj - The target object.\n * @returns {string} A string contains transform values.\n */\nfunction getTransforms(_ref) {\n  var rotate = _ref.rotate,\n      scaleX = _ref.scaleX,\n      scaleY = _ref.scaleY,\n      translateX = _ref.translateX,\n      translateY = _ref.translateY;\n\n  var values = [];\n\n  if (isNumber(translateX) && translateX !== 0) {\n    values.push('translateX(' + translateX + 'px)');\n  }\n\n  if (isNumber(translateY) && translateY !== 0) {\n    values.push('translateY(' + translateY + 'px)');\n  }\n\n  // Rotate should come first before scale to match orientation transform\n  if (isNumber(rotate) && rotate !== 0) {\n    values.push('rotate(' + rotate + 'deg)');\n  }\n\n  if (isNumber(scaleX) && scaleX !== 1) {\n    values.push('scaleX(' + scaleX + ')');\n  }\n\n  if (isNumber(scaleY) && scaleY !== 1) {\n    values.push('scaleY(' + scaleY + ')');\n  }\n\n  var transform = values.length ? values.join(' ') : 'none';\n\n  return {\n    WebkitTransform: transform,\n    msTransform: transform,\n    transform: transform\n  };\n}\n\n/**\n * Get the max ratio of a group of pointers.\n * @param {string} pointers - The target pointers.\n * @returns {number} The result ratio.\n */\nfunction getMaxZoomRatio(pointers) {\n  var pointers2 = assign({}, pointers);\n  var ratios = [];\n\n  forEach(pointers, function (pointer, pointerId) {\n    delete pointers2[pointerId];\n\n    forEach(pointers2, function (pointer2) {\n      var x1 = Math.abs(pointer.startX - pointer2.startX);\n      var y1 = Math.abs(pointer.startY - pointer2.startY);\n      var x2 = Math.abs(pointer.endX - pointer2.endX);\n      var y2 = Math.abs(pointer.endY - pointer2.endY);\n      var z1 = Math.sqrt(x1 * x1 + y1 * y1);\n      var z2 = Math.sqrt(x2 * x2 + y2 * y2);\n      var ratio = (z2 - z1) / z1;\n\n      ratios.push(ratio);\n    });\n  });\n\n  ratios.sort(function (a, b) {\n    return Math.abs(a) < Math.abs(b);\n  });\n\n  return ratios[0];\n}\n\n/**\n * Get a pointer from an event object.\n * @param {Object} event - The target event object.\n * @param {boolean} endOnly - Indicates if only returns the end point coordinate or not.\n * @returns {Object} The result pointer contains start and/or end point coordinates.\n */\nfunction getPointer(_ref2, endOnly) {\n  var pageX = _ref2.pageX,\n      pageY = _ref2.pageY;\n\n  var end = {\n    endX: pageX,\n    endY: pageY\n  };\n\n  return endOnly ? end : assign({\n    startX: pageX,\n    startY: pageY\n  }, end);\n}\n\n/**\n * Get the center point coordinate of a group of pointers.\n * @param {Object} pointers - The target pointers.\n * @returns {Object} The center point coordinate.\n */\nfunction getPointersCenter(pointers) {\n  var pageX = 0;\n  var pageY = 0;\n  var count = 0;\n\n  forEach(pointers, function (_ref3) {\n    var startX = _ref3.startX,\n        startY = _ref3.startY;\n\n    pageX += startX;\n    pageY += startY;\n    count += 1;\n  });\n\n  pageX /= count;\n  pageY /= count;\n\n  return {\n    pageX: pageX,\n    pageY: pageY\n  };\n}\n\n/**\n * Check if the given value is a finite number.\n */\nvar isFinite = Number.isFinite || WINDOW.isFinite;\n\n/**\n * Get the max sizes in a rectangle under the given aspect ratio.\n * @param {Object} data - The original sizes.\n * @param {string} [type='contain'] - The adjust type.\n * @returns {Object} The result sizes.\n */\nfunction getAdjustedSizes(_ref4) // or 'cover'\n{\n  var aspectRatio = _ref4.aspectRatio,\n      height = _ref4.height,\n      width = _ref4.width;\n  var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'contain';\n\n  var isValidNumber = function isValidNumber(value) {\n    return isFinite(value) && value > 0;\n  };\n\n  if (isValidNumber(width) && isValidNumber(height)) {\n    var adjustedWidth = height * aspectRatio;\n\n    if (type === 'contain' && adjustedWidth > width || type === 'cover' && adjustedWidth < width) {\n      height = width / aspectRatio;\n    } else {\n      width = height * aspectRatio;\n    }\n  } else if (isValidNumber(width)) {\n    height = width / aspectRatio;\n  } else if (isValidNumber(height)) {\n    width = height * aspectRatio;\n  }\n\n  return {\n    width: width,\n    height: height\n  };\n}\n\n/**\n * Get the new sizes of a rectangle after rotated.\n * @param {Object} data - The original sizes.\n * @returns {Object} The result sizes.\n */\nfunction getRotatedSizes(_ref5) {\n  var width = _ref5.width,\n      height = _ref5.height,\n      degree = _ref5.degree;\n\n  degree = Math.abs(degree) % 180;\n\n  if (degree === 90) {\n    return {\n      width: height,\n      height: width\n    };\n  }\n\n  var arc = degree % 90 * Math.PI / 180;\n  var sinArc = Math.sin(arc);\n  var cosArc = Math.cos(arc);\n  var newWidth = width * cosArc + height * sinArc;\n  var newHeight = width * sinArc + height * cosArc;\n\n  return degree > 90 ? {\n    width: newHeight,\n    height: newWidth\n  } : {\n    width: newWidth,\n    height: newHeight\n  };\n}\n\n/**\n * Get a canvas which drew the given image.\n * @param {HTMLImageElement} image - The image for drawing.\n * @param {Object} imageData - The image data.\n * @param {Object} canvasData - The canvas data.\n * @param {Object} options - The options.\n * @returns {HTMLCanvasElement} The result canvas.\n */\nfunction getSourceCanvas(image, _ref6, _ref7, _ref8) {\n  var imageNaturalWidth = _ref6.naturalWidth,\n      imageNaturalHeight = _ref6.naturalHeight,\n      _ref6$rotate = _ref6.rotate,\n      rotate = _ref6$rotate === undefined ? 0 : _ref6$rotate,\n      _ref6$scaleX = _ref6.scaleX,\n      scaleX = _ref6$scaleX === undefined ? 1 : _ref6$scaleX,\n      _ref6$scaleY = _ref6.scaleY,\n      scaleY = _ref6$scaleY === undefined ? 1 : _ref6$scaleY;\n  var aspectRatio = _ref7.aspectRatio,\n      naturalWidth = _ref7.naturalWidth,\n      naturalHeight = _ref7.naturalHeight;\n  var _ref8$fillColor = _ref8.fillColor,\n      fillColor = _ref8$fillColor === undefined ? 'transparent' : _ref8$fillColor,\n      _ref8$imageSmoothingE = _ref8.imageSmoothingEnabled,\n      imageSmoothingEnabled = _ref8$imageSmoothingE === undefined ? true : _ref8$imageSmoothingE,\n      _ref8$imageSmoothingQ = _ref8.imageSmoothingQuality,\n      imageSmoothingQuality = _ref8$imageSmoothingQ === undefined ? 'low' : _ref8$imageSmoothingQ,\n      _ref8$maxWidth = _ref8.maxWidth,\n      maxWidth = _ref8$maxWidth === undefined ? Infinity : _ref8$maxWidth,\n      _ref8$maxHeight = _ref8.maxHeight,\n      maxHeight = _ref8$maxHeight === undefined ? Infinity : _ref8$maxHeight,\n      _ref8$minWidth = _ref8.minWidth,\n      minWidth = _ref8$minWidth === undefined ? 0 : _ref8$minWidth,\n      _ref8$minHeight = _ref8.minHeight,\n      minHeight = _ref8$minHeight === undefined ? 0 : _ref8$minHeight;\n\n  var canvas = document.createElement('canvas');\n  var context = canvas.getContext('2d');\n  var maxSizes = getAdjustedSizes({\n    aspectRatio: aspectRatio,\n    width: maxWidth,\n    height: maxHeight\n  });\n  var minSizes = getAdjustedSizes({\n    aspectRatio: aspectRatio,\n    width: minWidth,\n    height: minHeight\n  }, 'cover');\n  var width = Math.min(maxSizes.width, Math.max(minSizes.width, naturalWidth));\n  var height = Math.min(maxSizes.height, Math.max(minSizes.height, naturalHeight));\n\n  // Note: should always use image's natural sizes for drawing as\n  // imageData.naturalWidth === canvasData.naturalHeight when rotate % 180 === 90\n  var destWidth = Math.min(maxSizes.width, Math.max(minSizes.width, imageNaturalWidth));\n  var destHeight = Math.min(maxSizes.height, Math.max(minSizes.height, imageNaturalHeight));\n  var params = [-destWidth / 2, -destHeight / 2, destWidth, destHeight];\n\n  canvas.width = normalizeDecimalNumber(width);\n  canvas.height = normalizeDecimalNumber(height);\n  context.fillStyle = fillColor;\n  context.fillRect(0, 0, width, height);\n  context.save();\n  context.translate(width / 2, height / 2);\n  context.rotate(rotate * Math.PI / 180);\n  context.scale(scaleX, scaleY);\n  context.imageSmoothingEnabled = imageSmoothingEnabled;\n  context.imageSmoothingQuality = imageSmoothingQuality;\n  context.drawImage.apply(context, [image].concat(toConsumableArray(params.map(function (param) {\n    return Math.floor(normalizeDecimalNumber(param));\n  }))));\n  context.restore();\n  return canvas;\n}\n\nvar fromCharCode = String.fromCharCode;\n\n/**\n * Get string from char code in data view.\n * @param {DataView} dataView - The data view for read.\n * @param {number} start - The start index.\n * @param {number} length - The read length.\n * @returns {string} The read result.\n */\n\nfunction getStringFromCharCode(dataView, start, length) {\n  var str = '';\n  var i = void 0;\n\n  length += start;\n\n  for (i = start; i < length; i += 1) {\n    str += fromCharCode(dataView.getUint8(i));\n  }\n\n  return str;\n}\n\nvar REGEXP_DATA_URL_HEAD = /^data:.*,/;\n\n/**\n * Transform Data URL to array buffer.\n * @param {string} dataURL - The Data URL to transform.\n * @returns {ArrayBuffer} The result array buffer.\n */\nfunction dataURLToArrayBuffer(dataURL) {\n  var base64 = dataURL.replace(REGEXP_DATA_URL_HEAD, '');\n  var binary = atob(base64);\n  var arrayBuffer = new ArrayBuffer(binary.length);\n  var uint8 = new Uint8Array(arrayBuffer);\n\n  forEach(uint8, function (value, i) {\n    uint8[i] = binary.charCodeAt(i);\n  });\n\n  return arrayBuffer;\n}\n\n/**\n * Transform array buffer to Data URL.\n * @param {ArrayBuffer} arrayBuffer - The array buffer to transform.\n * @param {string} mimeType - The mime type of the Data URL.\n * @returns {string} The result Data URL.\n */\nfunction arrayBufferToDataURL(arrayBuffer, mimeType) {\n  var uint8 = new Uint8Array(arrayBuffer);\n  var data = '';\n\n  // TypedArray.prototype.forEach is not supported in some browsers.\n  forEach(uint8, function (value) {\n    data += fromCharCode(value);\n  });\n\n  return 'data:' + mimeType + ';base64,' + btoa(data);\n}\n\n/**\n * Get orientation value from given array buffer.\n * @param {ArrayBuffer} arrayBuffer - The array buffer to read.\n * @returns {number} The read orientation value.\n */\nfunction getOrientation(arrayBuffer) {\n  var dataView = new DataView(arrayBuffer);\n  var orientation = void 0;\n  var littleEndian = void 0;\n  var app1Start = void 0;\n  var ifdStart = void 0;\n\n  // Only handle JPEG image (start by 0xFFD8)\n  if (dataView.getUint8(0) === 0xFF && dataView.getUint8(1) === 0xD8) {\n    var length = dataView.byteLength;\n    var offset = 2;\n\n    while (offset < length) {\n      if (dataView.getUint8(offset) === 0xFF && dataView.getUint8(offset + 1) === 0xE1) {\n        app1Start = offset;\n        break;\n      }\n\n      offset += 1;\n    }\n  }\n\n  if (app1Start) {\n    var exifIDCode = app1Start + 4;\n    var tiffOffset = app1Start + 10;\n\n    if (getStringFromCharCode(dataView, exifIDCode, 4) === 'Exif') {\n      var endianness = dataView.getUint16(tiffOffset);\n\n      littleEndian = endianness === 0x4949;\n\n      if (littleEndian || endianness === 0x4D4D /* bigEndian */) {\n          if (dataView.getUint16(tiffOffset + 2, littleEndian) === 0x002A) {\n            var firstIFDOffset = dataView.getUint32(tiffOffset + 4, littleEndian);\n\n            if (firstIFDOffset >= 0x00000008) {\n              ifdStart = tiffOffset + firstIFDOffset;\n            }\n          }\n        }\n    }\n  }\n\n  if (ifdStart) {\n    var _length = dataView.getUint16(ifdStart, littleEndian);\n    var _offset = void 0;\n    var i = void 0;\n\n    for (i = 0; i < _length; i += 1) {\n      _offset = ifdStart + i * 12 + 2;\n\n      if (dataView.getUint16(_offset, littleEndian) === 0x0112 /* Orientation */) {\n          // 8 is the offset of the current tag's value\n          _offset += 8;\n\n          // Get the original orientation value\n          orientation = dataView.getUint16(_offset, littleEndian);\n\n          // Override the orientation with its default value\n          dataView.setUint16(_offset, 1, littleEndian);\n          break;\n        }\n    }\n  }\n\n  return orientation;\n}\n\n/**\n * Parse Exif Orientation value.\n * @param {number} orientation - The orientation to parse.\n * @returns {Object} The parsed result.\n */\nfunction parseOrientation(orientation) {\n  var rotate = 0;\n  var scaleX = 1;\n  var scaleY = 1;\n\n  switch (orientation) {\n    // Flip horizontal\n    case 2:\n      scaleX = -1;\n      break;\n\n    // Rotate left 180°\n    case 3:\n      rotate = -180;\n      break;\n\n    // Flip vertical\n    case 4:\n      scaleY = -1;\n      break;\n\n    // Flip vertical and rotate right 90°\n    case 5:\n      rotate = 90;\n      scaleY = -1;\n      break;\n\n    // Rotate right 90°\n    case 6:\n      rotate = 90;\n      break;\n\n    // Flip horizontal and rotate right 90°\n    case 7:\n      rotate = 90;\n      scaleX = -1;\n      break;\n\n    // Rotate left 90°\n    case 8:\n      rotate = -90;\n      break;\n\n    default:\n  }\n\n  return {\n    rotate: rotate,\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n}\n\nvar render = {\n  render: function render() {\n    this.initContainer();\n    this.initCanvas();\n    this.initCropBox();\n    this.renderCanvas();\n\n    if (this.cropped) {\n      this.renderCropBox();\n    }\n  },\n  initContainer: function initContainer() {\n    var element = this.element,\n        options = this.options,\n        container = this.container,\n        cropper = this.cropper;\n\n\n    addClass(cropper, CLASS_HIDDEN);\n    removeClass(element, CLASS_HIDDEN);\n\n    var containerData = {\n      width: Math.max(container.offsetWidth, Number(options.minContainerWidth) || 200),\n      height: Math.max(container.offsetHeight, Number(options.minContainerHeight) || 100)\n    };\n\n    this.containerData = containerData;\n\n    setStyle(cropper, {\n      width: containerData.width,\n      height: containerData.height\n    });\n\n    addClass(element, CLASS_HIDDEN);\n    removeClass(cropper, CLASS_HIDDEN);\n  },\n\n\n  // Canvas (image wrapper)\n  initCanvas: function initCanvas() {\n    var containerData = this.containerData,\n        imageData = this.imageData;\n    var viewMode = this.options.viewMode;\n\n    var rotated = Math.abs(imageData.rotate) % 180 === 90;\n    var naturalWidth = rotated ? imageData.naturalHeight : imageData.naturalWidth;\n    var naturalHeight = rotated ? imageData.naturalWidth : imageData.naturalHeight;\n    var aspectRatio = naturalWidth / naturalHeight;\n    var canvasWidth = containerData.width;\n    var canvasHeight = containerData.height;\n\n    if (containerData.height * aspectRatio > containerData.width) {\n      if (viewMode === 3) {\n        canvasWidth = containerData.height * aspectRatio;\n      } else {\n        canvasHeight = containerData.width / aspectRatio;\n      }\n    } else if (viewMode === 3) {\n      canvasHeight = containerData.width / aspectRatio;\n    } else {\n      canvasWidth = containerData.height * aspectRatio;\n    }\n\n    var canvasData = {\n      aspectRatio: aspectRatio,\n      naturalWidth: naturalWidth,\n      naturalHeight: naturalHeight,\n      width: canvasWidth,\n      height: canvasHeight\n    };\n\n    canvasData.left = (containerData.width - canvasWidth) / 2;\n    canvasData.top = (containerData.height - canvasHeight) / 2;\n    canvasData.oldLeft = canvasData.left;\n    canvasData.oldTop = canvasData.top;\n\n    this.canvasData = canvasData;\n    this.limited = viewMode === 1 || viewMode === 2;\n    this.limitCanvas(true, true);\n    this.initialImageData = assign({}, imageData);\n    this.initialCanvasData = assign({}, canvasData);\n  },\n  limitCanvas: function limitCanvas(sizeLimited, positionLimited) {\n    var options = this.options,\n        containerData = this.containerData,\n        canvasData = this.canvasData,\n        cropBoxData = this.cropBoxData;\n    var viewMode = options.viewMode;\n    var aspectRatio = canvasData.aspectRatio;\n\n    var cropped = this.cropped && cropBoxData;\n\n    if (sizeLimited) {\n      var minCanvasWidth = Number(options.minCanvasWidth) || 0;\n      var minCanvasHeight = Number(options.minCanvasHeight) || 0;\n\n      if (viewMode > 1) {\n        minCanvasWidth = Math.max(minCanvasWidth, containerData.width);\n        minCanvasHeight = Math.max(minCanvasHeight, containerData.height);\n\n        if (viewMode === 3) {\n          if (minCanvasHeight * aspectRatio > minCanvasWidth) {\n            minCanvasWidth = minCanvasHeight * aspectRatio;\n          } else {\n            minCanvasHeight = minCanvasWidth / aspectRatio;\n          }\n        }\n      } else if (viewMode > 0) {\n        if (minCanvasWidth) {\n          minCanvasWidth = Math.max(minCanvasWidth, cropped ? cropBoxData.width : 0);\n        } else if (minCanvasHeight) {\n          minCanvasHeight = Math.max(minCanvasHeight, cropped ? cropBoxData.height : 0);\n        } else if (cropped) {\n          minCanvasWidth = cropBoxData.width;\n          minCanvasHeight = cropBoxData.height;\n\n          if (minCanvasHeight * aspectRatio > minCanvasWidth) {\n            minCanvasWidth = minCanvasHeight * aspectRatio;\n          } else {\n            minCanvasHeight = minCanvasWidth / aspectRatio;\n          }\n        }\n      }\n\n      var _getAdjustedSizes = getAdjustedSizes({\n        aspectRatio: aspectRatio,\n        width: minCanvasWidth,\n        height: minCanvasHeight\n      });\n\n      minCanvasWidth = _getAdjustedSizes.width;\n      minCanvasHeight = _getAdjustedSizes.height;\n\n\n      canvasData.minWidth = minCanvasWidth;\n      canvasData.minHeight = minCanvasHeight;\n      canvasData.maxWidth = Infinity;\n      canvasData.maxHeight = Infinity;\n    }\n\n    if (positionLimited) {\n      if (viewMode) {\n        var newCanvasLeft = containerData.width - canvasData.width;\n        var newCanvasTop = containerData.height - canvasData.height;\n\n        canvasData.minLeft = Math.min(0, newCanvasLeft);\n        canvasData.minTop = Math.min(0, newCanvasTop);\n        canvasData.maxLeft = Math.max(0, newCanvasLeft);\n        canvasData.maxTop = Math.max(0, newCanvasTop);\n\n        if (cropped && this.limited) {\n          canvasData.minLeft = Math.min(cropBoxData.left, cropBoxData.left + (cropBoxData.width - canvasData.width));\n          canvasData.minTop = Math.min(cropBoxData.top, cropBoxData.top + (cropBoxData.height - canvasData.height));\n          canvasData.maxLeft = cropBoxData.left;\n          canvasData.maxTop = cropBoxData.top;\n\n          if (viewMode === 2) {\n            if (canvasData.width >= containerData.width) {\n              canvasData.minLeft = Math.min(0, newCanvasLeft);\n              canvasData.maxLeft = Math.max(0, newCanvasLeft);\n            }\n\n            if (canvasData.height >= containerData.height) {\n              canvasData.minTop = Math.min(0, newCanvasTop);\n              canvasData.maxTop = Math.max(0, newCanvasTop);\n            }\n          }\n        }\n      } else {\n        canvasData.minLeft = -canvasData.width;\n        canvasData.minTop = -canvasData.height;\n        canvasData.maxLeft = containerData.width;\n        canvasData.maxTop = containerData.height;\n      }\n    }\n  },\n  renderCanvas: function renderCanvas(changed, transformed) {\n    var canvasData = this.canvasData,\n        imageData = this.imageData;\n\n\n    if (transformed) {\n      var _getRotatedSizes = getRotatedSizes({\n        width: imageData.naturalWidth * Math.abs(imageData.scaleX || 1),\n        height: imageData.naturalHeight * Math.abs(imageData.scaleY || 1),\n        degree: imageData.rotate || 0\n      }),\n          naturalWidth = _getRotatedSizes.width,\n          naturalHeight = _getRotatedSizes.height;\n\n      var width = canvasData.width * (naturalWidth / canvasData.naturalWidth);\n      var height = canvasData.height * (naturalHeight / canvasData.naturalHeight);\n\n      canvasData.left -= (width - canvasData.width) / 2;\n      canvasData.top -= (height - canvasData.height) / 2;\n      canvasData.width = width;\n      canvasData.height = height;\n      canvasData.aspectRatio = naturalWidth / naturalHeight;\n      canvasData.naturalWidth = naturalWidth;\n      canvasData.naturalHeight = naturalHeight;\n      this.limitCanvas(true, false);\n    }\n\n    if (canvasData.width > canvasData.maxWidth || canvasData.width < canvasData.minWidth) {\n      canvasData.left = canvasData.oldLeft;\n    }\n\n    if (canvasData.height > canvasData.maxHeight || canvasData.height < canvasData.minHeight) {\n      canvasData.top = canvasData.oldTop;\n    }\n\n    canvasData.width = Math.min(Math.max(canvasData.width, canvasData.minWidth), canvasData.maxWidth);\n    canvasData.height = Math.min(Math.max(canvasData.height, canvasData.minHeight), canvasData.maxHeight);\n\n    this.limitCanvas(false, true);\n\n    canvasData.left = Math.min(Math.max(canvasData.left, canvasData.minLeft), canvasData.maxLeft);\n    canvasData.top = Math.min(Math.max(canvasData.top, canvasData.minTop), canvasData.maxTop);\n    canvasData.oldLeft = canvasData.left;\n    canvasData.oldTop = canvasData.top;\n\n    setStyle(this.canvas, assign({\n      width: canvasData.width,\n      height: canvasData.height\n    }, getTransforms({\n      translateX: canvasData.left,\n      translateY: canvasData.top\n    })));\n\n    this.renderImage(changed);\n\n    if (this.cropped && this.limited) {\n      this.limitCropBox(true, true);\n    }\n  },\n  renderImage: function renderImage(changed) {\n    var canvasData = this.canvasData,\n        imageData = this.imageData;\n\n    var width = imageData.naturalWidth * (canvasData.width / canvasData.naturalWidth);\n    var height = imageData.naturalHeight * (canvasData.height / canvasData.naturalHeight);\n\n    assign(imageData, {\n      width: width,\n      height: height,\n      left: (canvasData.width - width) / 2,\n      top: (canvasData.height - height) / 2\n    });\n    setStyle(this.image, assign({\n      width: imageData.width,\n      height: imageData.height\n    }, getTransforms(assign({\n      translateX: imageData.left,\n      translateY: imageData.top\n    }, imageData))));\n\n    if (changed) {\n      this.output();\n    }\n  },\n  initCropBox: function initCropBox() {\n    var options = this.options,\n        canvasData = this.canvasData;\n    var aspectRatio = options.aspectRatio;\n\n    var autoCropArea = Number(options.autoCropArea) || 0.8;\n    var cropBoxData = {\n      width: canvasData.width,\n      height: canvasData.height\n    };\n\n    if (aspectRatio) {\n      if (canvasData.height * aspectRatio > canvasData.width) {\n        cropBoxData.height = cropBoxData.width / aspectRatio;\n      } else {\n        cropBoxData.width = cropBoxData.height * aspectRatio;\n      }\n    }\n\n    this.cropBoxData = cropBoxData;\n    this.limitCropBox(true, true);\n\n    // Initialize auto crop area\n    cropBoxData.width = Math.min(Math.max(cropBoxData.width, cropBoxData.minWidth), cropBoxData.maxWidth);\n    cropBoxData.height = Math.min(Math.max(cropBoxData.height, cropBoxData.minHeight), cropBoxData.maxHeight);\n\n    // The width/height of auto crop area must large than \"minWidth/Height\"\n    cropBoxData.width = Math.max(cropBoxData.minWidth, cropBoxData.width * autoCropArea);\n    cropBoxData.height = Math.max(cropBoxData.minHeight, cropBoxData.height * autoCropArea);\n    cropBoxData.left = canvasData.left + (canvasData.width - cropBoxData.width) / 2;\n    cropBoxData.top = canvasData.top + (canvasData.height - cropBoxData.height) / 2;\n    cropBoxData.oldLeft = cropBoxData.left;\n    cropBoxData.oldTop = cropBoxData.top;\n\n    this.initialCropBoxData = assign({}, cropBoxData);\n  },\n  limitCropBox: function limitCropBox(sizeLimited, positionLimited) {\n    var options = this.options,\n        containerData = this.containerData,\n        canvasData = this.canvasData,\n        cropBoxData = this.cropBoxData,\n        limited = this.limited;\n    var aspectRatio = options.aspectRatio;\n\n\n    if (sizeLimited) {\n      var minCropBoxWidth = Number(options.minCropBoxWidth) || 0;\n      var minCropBoxHeight = Number(options.minCropBoxHeight) || 0;\n      var maxCropBoxWidth = Math.min(containerData.width, limited ? canvasData.width : containerData.width);\n      var maxCropBoxHeight = Math.min(containerData.height, limited ? canvasData.height : containerData.height);\n\n      // The min/maxCropBoxWidth/Height must be less than container's width/height\n      minCropBoxWidth = Math.min(minCropBoxWidth, containerData.width);\n      minCropBoxHeight = Math.min(minCropBoxHeight, containerData.height);\n\n      if (aspectRatio) {\n        if (minCropBoxWidth && minCropBoxHeight) {\n          if (minCropBoxHeight * aspectRatio > minCropBoxWidth) {\n            minCropBoxHeight = minCropBoxWidth / aspectRatio;\n          } else {\n            minCropBoxWidth = minCropBoxHeight * aspectRatio;\n          }\n        } else if (minCropBoxWidth) {\n          minCropBoxHeight = minCropBoxWidth / aspectRatio;\n        } else if (minCropBoxHeight) {\n          minCropBoxWidth = minCropBoxHeight * aspectRatio;\n        }\n\n        if (maxCropBoxHeight * aspectRatio > maxCropBoxWidth) {\n          maxCropBoxHeight = maxCropBoxWidth / aspectRatio;\n        } else {\n          maxCropBoxWidth = maxCropBoxHeight * aspectRatio;\n        }\n      }\n\n      // The minWidth/Height must be less than maxWidth/Height\n      cropBoxData.minWidth = Math.min(minCropBoxWidth, maxCropBoxWidth);\n      cropBoxData.minHeight = Math.min(minCropBoxHeight, maxCropBoxHeight);\n      cropBoxData.maxWidth = maxCropBoxWidth;\n      cropBoxData.maxHeight = maxCropBoxHeight;\n    }\n\n    if (positionLimited) {\n      if (limited) {\n        cropBoxData.minLeft = Math.max(0, canvasData.left);\n        cropBoxData.minTop = Math.max(0, canvasData.top);\n        cropBoxData.maxLeft = Math.min(containerData.width, canvasData.left + canvasData.width) - cropBoxData.width;\n        cropBoxData.maxTop = Math.min(containerData.height, canvasData.top + canvasData.height) - cropBoxData.height;\n      } else {\n        cropBoxData.minLeft = 0;\n        cropBoxData.minTop = 0;\n        cropBoxData.maxLeft = containerData.width - cropBoxData.width;\n        cropBoxData.maxTop = containerData.height - cropBoxData.height;\n      }\n    }\n  },\n  renderCropBox: function renderCropBox() {\n    var options = this.options,\n        containerData = this.containerData,\n        cropBoxData = this.cropBoxData;\n\n\n    if (cropBoxData.width > cropBoxData.maxWidth || cropBoxData.width < cropBoxData.minWidth) {\n      cropBoxData.left = cropBoxData.oldLeft;\n    }\n\n    if (cropBoxData.height > cropBoxData.maxHeight || cropBoxData.height < cropBoxData.minHeight) {\n      cropBoxData.top = cropBoxData.oldTop;\n    }\n\n    cropBoxData.width = Math.min(Math.max(cropBoxData.width, cropBoxData.minWidth), cropBoxData.maxWidth);\n    cropBoxData.height = Math.min(Math.max(cropBoxData.height, cropBoxData.minHeight), cropBoxData.maxHeight);\n\n    this.limitCropBox(false, true);\n\n    cropBoxData.left = Math.min(Math.max(cropBoxData.left, cropBoxData.minLeft), cropBoxData.maxLeft);\n    cropBoxData.top = Math.min(Math.max(cropBoxData.top, cropBoxData.minTop), cropBoxData.maxTop);\n    cropBoxData.oldLeft = cropBoxData.left;\n    cropBoxData.oldTop = cropBoxData.top;\n\n    if (options.movable && options.cropBoxMovable) {\n      // Turn to move the canvas when the crop box is equal to the container\n      setData(this.face, DATA_ACTION, cropBoxData.width >= containerData.width && cropBoxData.height >= containerData.height ? ACTION_MOVE : ACTION_ALL);\n    }\n\n    setStyle(this.cropBox, assign({\n      width: cropBoxData.width,\n      height: cropBoxData.height\n    }, getTransforms({\n      translateX: cropBoxData.left,\n      translateY: cropBoxData.top\n    })));\n\n    if (this.cropped && this.limited) {\n      this.limitCanvas(true, true);\n    }\n\n    if (!this.disabled) {\n      this.output();\n    }\n  },\n  output: function output() {\n    this.preview();\n    dispatchEvent(this.element, EVENT_CROP, this.getData());\n  }\n};\n\nvar preview = {\n  initPreview: function initPreview() {\n    var crossOrigin = this.crossOrigin;\n    var preview = this.options.preview;\n\n    var url = crossOrigin ? this.crossOriginUrl : this.url;\n    var image = document.createElement('img');\n\n    if (crossOrigin) {\n      image.crossOrigin = crossOrigin;\n    }\n\n    image.src = url;\n    this.viewBox.appendChild(image);\n    this.viewBoxImage = image;\n\n    if (!preview) {\n      return;\n    }\n\n    var previews = preview;\n\n    if (typeof preview === 'string') {\n      previews = this.element.ownerDocument.querySelectorAll(preview);\n    } else if (preview.querySelector) {\n      previews = [preview];\n    }\n\n    this.previews = previews;\n\n    forEach(previews, function (el) {\n      var img = document.createElement('img');\n\n      // Save the original size for recover\n      setData(el, DATA_PREVIEW, {\n        width: el.offsetWidth,\n        height: el.offsetHeight,\n        html: el.innerHTML\n      });\n\n      if (crossOrigin) {\n        img.crossOrigin = crossOrigin;\n      }\n\n      img.src = url;\n\n      /**\n       * Override img element styles\n       * Add `display:block` to avoid margin top issue\n       * Add `height:auto` to override `height` attribute on IE8\n       * (Occur only when margin-top <= -height)\n       */\n      img.style.cssText = 'display:block;' + 'width:100%;' + 'height:auto;' + 'min-width:0!important;' + 'min-height:0!important;' + 'max-width:none!important;' + 'max-height:none!important;' + 'image-orientation:0deg!important;\"';\n\n      el.innerHTML = '';\n      el.appendChild(img);\n    });\n  },\n  resetPreview: function resetPreview() {\n    forEach(this.previews, function (element) {\n      var data = getData(element, DATA_PREVIEW);\n\n      setStyle(element, {\n        width: data.width,\n        height: data.height\n      });\n\n      element.innerHTML = data.html;\n      removeData(element, DATA_PREVIEW);\n    });\n  },\n  preview: function preview() {\n    var imageData = this.imageData,\n        canvasData = this.canvasData,\n        cropBoxData = this.cropBoxData;\n    var cropBoxWidth = cropBoxData.width,\n        cropBoxHeight = cropBoxData.height;\n    var width = imageData.width,\n        height = imageData.height;\n\n    var left = cropBoxData.left - canvasData.left - imageData.left;\n    var top = cropBoxData.top - canvasData.top - imageData.top;\n\n    if (!this.cropped || this.disabled) {\n      return;\n    }\n\n    setStyle(this.viewBoxImage, assign({\n      width: width,\n      height: height\n    }, getTransforms(assign({\n      translateX: -left,\n      translateY: -top\n    }, imageData))));\n\n    forEach(this.previews, function (element) {\n      var data = getData(element, DATA_PREVIEW);\n      var originalWidth = data.width;\n      var originalHeight = data.height;\n      var newWidth = originalWidth;\n      var newHeight = originalHeight;\n      var ratio = 1;\n\n      if (cropBoxWidth) {\n        ratio = originalWidth / cropBoxWidth;\n        newHeight = cropBoxHeight * ratio;\n      }\n\n      if (cropBoxHeight && newHeight > originalHeight) {\n        ratio = originalHeight / cropBoxHeight;\n        newWidth = cropBoxWidth * ratio;\n        newHeight = originalHeight;\n      }\n\n      setStyle(element, {\n        width: newWidth,\n        height: newHeight\n      });\n\n      setStyle(element.getElementsByTagName('img')[0], assign({\n        width: width * ratio,\n        height: height * ratio\n      }, getTransforms(assign({\n        translateX: -left * ratio,\n        translateY: -top * ratio\n      }, imageData))));\n    });\n  }\n};\n\nvar events = {\n  bind: function bind() {\n    var element = this.element,\n        options = this.options,\n        cropper = this.cropper;\n\n\n    if (isFunction(options.cropstart)) {\n      addListener(element, EVENT_CROP_START, options.cropstart);\n    }\n\n    if (isFunction(options.cropmove)) {\n      addListener(element, EVENT_CROP_MOVE, options.cropmove);\n    }\n\n    if (isFunction(options.cropend)) {\n      addListener(element, EVENT_CROP_END, options.cropend);\n    }\n\n    if (isFunction(options.crop)) {\n      addListener(element, EVENT_CROP, options.crop);\n    }\n\n    if (isFunction(options.zoom)) {\n      addListener(element, EVENT_ZOOM, options.zoom);\n    }\n\n    addListener(cropper, EVENT_POINTER_DOWN, this.onCropStart = this.cropStart.bind(this));\n\n    if (options.zoomable && options.zoomOnWheel) {\n      addListener(cropper, EVENT_WHEEL, this.onWheel = this.wheel.bind(this));\n    }\n\n    if (options.toggleDragModeOnDblclick) {\n      addListener(cropper, EVENT_DBLCLICK, this.onDblclick = this.dblclick.bind(this));\n    }\n\n    addListener(element.ownerDocument, EVENT_POINTER_MOVE, this.onCropMove = this.cropMove.bind(this));\n    addListener(element.ownerDocument, EVENT_POINTER_UP, this.onCropEnd = this.cropEnd.bind(this));\n\n    if (options.responsive) {\n      addListener(window, EVENT_RESIZE, this.onResize = this.resize.bind(this));\n    }\n  },\n  unbind: function unbind() {\n    var element = this.element,\n        options = this.options,\n        cropper = this.cropper;\n\n\n    if (isFunction(options.cropstart)) {\n      removeListener(element, EVENT_CROP_START, options.cropstart);\n    }\n\n    if (isFunction(options.cropmove)) {\n      removeListener(element, EVENT_CROP_MOVE, options.cropmove);\n    }\n\n    if (isFunction(options.cropend)) {\n      removeListener(element, EVENT_CROP_END, options.cropend);\n    }\n\n    if (isFunction(options.crop)) {\n      removeListener(element, EVENT_CROP, options.crop);\n    }\n\n    if (isFunction(options.zoom)) {\n      removeListener(element, EVENT_ZOOM, options.zoom);\n    }\n\n    removeListener(cropper, EVENT_POINTER_DOWN, this.onCropStart);\n\n    if (options.zoomable && options.zoomOnWheel) {\n      removeListener(cropper, EVENT_WHEEL, this.onWheel);\n    }\n\n    if (options.toggleDragModeOnDblclick) {\n      removeListener(cropper, EVENT_DBLCLICK, this.onDblclick);\n    }\n\n    removeListener(element.ownerDocument, EVENT_POINTER_MOVE, this.onCropMove);\n    removeListener(element.ownerDocument, EVENT_POINTER_UP, this.onCropEnd);\n\n    if (options.responsive) {\n      removeListener(window, EVENT_RESIZE, this.onResize);\n    }\n  }\n};\n\nvar handlers = {\n  resize: function resize() {\n    var options = this.options,\n        container = this.container,\n        containerData = this.containerData;\n\n    var minContainerWidth = Number(options.minContainerWidth) || 200;\n    var minContainerHeight = Number(options.minContainerHeight) || 100;\n\n    if (this.disabled || containerData.width <= minContainerWidth || containerData.height <= minContainerHeight) {\n      return;\n    }\n\n    var ratio = container.offsetWidth / containerData.width;\n\n    // Resize when width changed or height changed\n    if (ratio !== 1 || container.offsetHeight !== containerData.height) {\n      var canvasData = void 0;\n      var cropBoxData = void 0;\n\n      if (options.restore) {\n        canvasData = this.getCanvasData();\n        cropBoxData = this.getCropBoxData();\n      }\n\n      this.render();\n\n      if (options.restore) {\n        this.setCanvasData(forEach(canvasData, function (n, i) {\n          canvasData[i] = n * ratio;\n        }));\n        this.setCropBoxData(forEach(cropBoxData, function (n, i) {\n          cropBoxData[i] = n * ratio;\n        }));\n      }\n    }\n  },\n  dblclick: function dblclick() {\n    if (this.disabled || this.options.dragMode === DRAG_MODE_NONE) {\n      return;\n    }\n\n    this.setDragMode(hasClass(this.dragBox, CLASS_CROP) ? DRAG_MODE_MOVE : DRAG_MODE_CROP);\n  },\n  wheel: function wheel(e) {\n    var _this = this;\n\n    var ratio = Number(this.options.wheelZoomRatio) || 0.1;\n    var delta = 1;\n\n    if (this.disabled) {\n      return;\n    }\n\n    e.preventDefault();\n\n    // Limit wheel speed to prevent zoom too fast (#21)\n    if (this.wheeling) {\n      return;\n    }\n\n    this.wheeling = true;\n\n    setTimeout(function () {\n      _this.wheeling = false;\n    }, 50);\n\n    if (e.deltaY) {\n      delta = e.deltaY > 0 ? 1 : -1;\n    } else if (e.wheelDelta) {\n      delta = -e.wheelDelta / 120;\n    } else if (e.detail) {\n      delta = e.detail > 0 ? 1 : -1;\n    }\n\n    this.zoom(-delta * ratio, e);\n  },\n  cropStart: function cropStart(e) {\n    if (this.disabled) {\n      return;\n    }\n\n    var options = this.options,\n        pointers = this.pointers;\n\n    var action = void 0;\n\n    if (e.changedTouches) {\n      // Handle touch event\n      forEach(e.changedTouches, function (touch) {\n        pointers[touch.identifier] = getPointer(touch);\n      });\n    } else {\n      // Handle mouse event and pointer event\n      pointers[e.pointerId || 0] = getPointer(e);\n    }\n\n    if (Object.keys(pointers).length > 1 && options.zoomable && options.zoomOnTouch) {\n      action = ACTION_ZOOM;\n    } else {\n      action = getData(e.target, DATA_ACTION);\n    }\n\n    if (!REGEXP_ACTIONS.test(action)) {\n      return;\n    }\n\n    if (dispatchEvent(this.element, EVENT_CROP_START, {\n      originalEvent: e,\n      action: action\n    }) === false) {\n      return;\n    }\n\n    e.preventDefault();\n\n    this.action = action;\n    this.cropping = false;\n\n    if (action === ACTION_CROP) {\n      this.cropping = true;\n      addClass(this.dragBox, CLASS_MODAL);\n    }\n  },\n  cropMove: function cropMove(e) {\n    var action = this.action;\n\n\n    if (this.disabled || !action) {\n      return;\n    }\n\n    var pointers = this.pointers;\n\n\n    e.preventDefault();\n\n    if (dispatchEvent(this.element, EVENT_CROP_MOVE, {\n      originalEvent: e,\n      action: action\n    }) === false) {\n      return;\n    }\n\n    if (e.changedTouches) {\n      forEach(e.changedTouches, function (touch) {\n        assign(pointers[touch.identifier], getPointer(touch, true));\n      });\n    } else {\n      assign(pointers[e.pointerId || 0], getPointer(e, true));\n    }\n\n    this.change(e);\n  },\n  cropEnd: function cropEnd(e) {\n    if (this.disabled) {\n      return;\n    }\n\n    var action = this.action,\n        pointers = this.pointers;\n\n\n    if (e.changedTouches) {\n      forEach(e.changedTouches, function (touch) {\n        delete pointers[touch.identifier];\n      });\n    } else {\n      delete pointers[e.pointerId || 0];\n    }\n\n    if (!action) {\n      return;\n    }\n\n    e.preventDefault();\n\n    if (!Object.keys(pointers).length) {\n      this.action = '';\n    }\n\n    if (this.cropping) {\n      this.cropping = false;\n      toggleClass(this.dragBox, CLASS_MODAL, this.cropped && this.options.modal);\n    }\n\n    dispatchEvent(this.element, EVENT_CROP_END, {\n      originalEvent: e,\n      action: action\n    });\n  }\n};\n\nvar change = {\n  change: function change(e) {\n    var options = this.options,\n        canvasData = this.canvasData,\n        containerData = this.containerData,\n        cropBoxData = this.cropBoxData,\n        pointers = this.pointers;\n    var action = this.action;\n    var aspectRatio = options.aspectRatio;\n    var left = cropBoxData.left,\n        top = cropBoxData.top,\n        width = cropBoxData.width,\n        height = cropBoxData.height;\n\n    var right = left + width;\n    var bottom = top + height;\n    var minLeft = 0;\n    var minTop = 0;\n    var maxWidth = containerData.width;\n    var maxHeight = containerData.height;\n    var renderable = true;\n    var offset = void 0;\n\n    // Locking aspect ratio in \"free mode\" by holding shift key\n    if (!aspectRatio && e.shiftKey) {\n      aspectRatio = width && height ? width / height : 1;\n    }\n\n    if (this.limited) {\n      minLeft = cropBoxData.minLeft;\n      minTop = cropBoxData.minTop;\n\n      maxWidth = minLeft + Math.min(containerData.width, canvasData.width, canvasData.left + canvasData.width);\n      maxHeight = minTop + Math.min(containerData.height, canvasData.height, canvasData.top + canvasData.height);\n    }\n\n    var pointer = pointers[Object.keys(pointers)[0]];\n    var range = {\n      x: pointer.endX - pointer.startX,\n      y: pointer.endY - pointer.startY\n    };\n    var check = function check(side) {\n      switch (side) {\n        case ACTION_EAST:\n          if (right + range.x > maxWidth) {\n            range.x = maxWidth - right;\n          }\n\n          break;\n\n        case ACTION_WEST:\n          if (left + range.x < minLeft) {\n            range.x = minLeft - left;\n          }\n\n          break;\n\n        case ACTION_NORTH:\n          if (top + range.y < minTop) {\n            range.y = minTop - top;\n          }\n\n          break;\n\n        case ACTION_SOUTH:\n          if (bottom + range.y > maxHeight) {\n            range.y = maxHeight - bottom;\n          }\n\n          break;\n\n        default:\n      }\n    };\n\n    switch (action) {\n      // Move crop box\n      case ACTION_ALL:\n        left += range.x;\n        top += range.y;\n        break;\n\n      // Resize crop box\n      case ACTION_EAST:\n        if (range.x >= 0 && (right >= maxWidth || aspectRatio && (top <= minTop || bottom >= maxHeight))) {\n          renderable = false;\n          break;\n        }\n\n        check(ACTION_EAST);\n        width += range.x;\n\n        if (aspectRatio) {\n          height = width / aspectRatio;\n          top -= range.x / aspectRatio / 2;\n        }\n\n        if (width < 0) {\n          action = ACTION_WEST;\n          width = 0;\n        }\n\n        break;\n\n      case ACTION_NORTH:\n        if (range.y <= 0 && (top <= minTop || aspectRatio && (left <= minLeft || right >= maxWidth))) {\n          renderable = false;\n          break;\n        }\n\n        check(ACTION_NORTH);\n        height -= range.y;\n        top += range.y;\n\n        if (aspectRatio) {\n          width = height * aspectRatio;\n          left += range.y * aspectRatio / 2;\n        }\n\n        if (height < 0) {\n          action = ACTION_SOUTH;\n          height = 0;\n        }\n\n        break;\n\n      case ACTION_WEST:\n        if (range.x <= 0 && (left <= minLeft || aspectRatio && (top <= minTop || bottom >= maxHeight))) {\n          renderable = false;\n          break;\n        }\n\n        check(ACTION_WEST);\n        width -= range.x;\n        left += range.x;\n\n        if (aspectRatio) {\n          height = width / aspectRatio;\n          top += range.x / aspectRatio / 2;\n        }\n\n        if (width < 0) {\n          action = ACTION_EAST;\n          width = 0;\n        }\n\n        break;\n\n      case ACTION_SOUTH:\n        if (range.y >= 0 && (bottom >= maxHeight || aspectRatio && (left <= minLeft || right >= maxWidth))) {\n          renderable = false;\n          break;\n        }\n\n        check(ACTION_SOUTH);\n        height += range.y;\n\n        if (aspectRatio) {\n          width = height * aspectRatio;\n          left -= range.y * aspectRatio / 2;\n        }\n\n        if (height < 0) {\n          action = ACTION_NORTH;\n          height = 0;\n        }\n\n        break;\n\n      case ACTION_NORTH_EAST:\n        if (aspectRatio) {\n          if (range.y <= 0 && (top <= minTop || right >= maxWidth)) {\n            renderable = false;\n            break;\n          }\n\n          check(ACTION_NORTH);\n          height -= range.y;\n          top += range.y;\n          width = height * aspectRatio;\n        } else {\n          check(ACTION_NORTH);\n          check(ACTION_EAST);\n\n          if (range.x >= 0) {\n            if (right < maxWidth) {\n              width += range.x;\n            } else if (range.y <= 0 && top <= minTop) {\n              renderable = false;\n            }\n          } else {\n            width += range.x;\n          }\n\n          if (range.y <= 0) {\n            if (top > minTop) {\n              height -= range.y;\n              top += range.y;\n            }\n          } else {\n            height -= range.y;\n            top += range.y;\n          }\n        }\n\n        if (width < 0 && height < 0) {\n          action = ACTION_SOUTH_WEST;\n          height = 0;\n          width = 0;\n        } else if (width < 0) {\n          action = ACTION_NORTH_WEST;\n          width = 0;\n        } else if (height < 0) {\n          action = ACTION_SOUTH_EAST;\n          height = 0;\n        }\n\n        break;\n\n      case ACTION_NORTH_WEST:\n        if (aspectRatio) {\n          if (range.y <= 0 && (top <= minTop || left <= minLeft)) {\n            renderable = false;\n            break;\n          }\n\n          check(ACTION_NORTH);\n          height -= range.y;\n          top += range.y;\n          width = height * aspectRatio;\n          left += range.y * aspectRatio;\n        } else {\n          check(ACTION_NORTH);\n          check(ACTION_WEST);\n\n          if (range.x <= 0) {\n            if (left > minLeft) {\n              width -= range.x;\n              left += range.x;\n            } else if (range.y <= 0 && top <= minTop) {\n              renderable = false;\n            }\n          } else {\n            width -= range.x;\n            left += range.x;\n          }\n\n          if (range.y <= 0) {\n            if (top > minTop) {\n              height -= range.y;\n              top += range.y;\n            }\n          } else {\n            height -= range.y;\n            top += range.y;\n          }\n        }\n\n        if (width < 0 && height < 0) {\n          action = ACTION_SOUTH_EAST;\n          height = 0;\n          width = 0;\n        } else if (width < 0) {\n          action = ACTION_NORTH_EAST;\n          width = 0;\n        } else if (height < 0) {\n          action = ACTION_SOUTH_WEST;\n          height = 0;\n        }\n\n        break;\n\n      case ACTION_SOUTH_WEST:\n        if (aspectRatio) {\n          if (range.x <= 0 && (left <= minLeft || bottom >= maxHeight)) {\n            renderable = false;\n            break;\n          }\n\n          check(ACTION_WEST);\n          width -= range.x;\n          left += range.x;\n          height = width / aspectRatio;\n        } else {\n          check(ACTION_SOUTH);\n          check(ACTION_WEST);\n\n          if (range.x <= 0) {\n            if (left > minLeft) {\n              width -= range.x;\n              left += range.x;\n            } else if (range.y >= 0 && bottom >= maxHeight) {\n              renderable = false;\n            }\n          } else {\n            width -= range.x;\n            left += range.x;\n          }\n\n          if (range.y >= 0) {\n            if (bottom < maxHeight) {\n              height += range.y;\n            }\n          } else {\n            height += range.y;\n          }\n        }\n\n        if (width < 0 && height < 0) {\n          action = ACTION_NORTH_EAST;\n          height = 0;\n          width = 0;\n        } else if (width < 0) {\n          action = ACTION_SOUTH_EAST;\n          width = 0;\n        } else if (height < 0) {\n          action = ACTION_NORTH_WEST;\n          height = 0;\n        }\n\n        break;\n\n      case ACTION_SOUTH_EAST:\n        if (aspectRatio) {\n          if (range.x >= 0 && (right >= maxWidth || bottom >= maxHeight)) {\n            renderable = false;\n            break;\n          }\n\n          check(ACTION_EAST);\n          width += range.x;\n          height = width / aspectRatio;\n        } else {\n          check(ACTION_SOUTH);\n          check(ACTION_EAST);\n\n          if (range.x >= 0) {\n            if (right < maxWidth) {\n              width += range.x;\n            } else if (range.y >= 0 && bottom >= maxHeight) {\n              renderable = false;\n            }\n          } else {\n            width += range.x;\n          }\n\n          if (range.y >= 0) {\n            if (bottom < maxHeight) {\n              height += range.y;\n            }\n          } else {\n            height += range.y;\n          }\n        }\n\n        if (width < 0 && height < 0) {\n          action = ACTION_NORTH_WEST;\n          height = 0;\n          width = 0;\n        } else if (width < 0) {\n          action = ACTION_SOUTH_WEST;\n          width = 0;\n        } else if (height < 0) {\n          action = ACTION_NORTH_EAST;\n          height = 0;\n        }\n\n        break;\n\n      // Move canvas\n      case ACTION_MOVE:\n        this.move(range.x, range.y);\n        renderable = false;\n        break;\n\n      // Zoom canvas\n      case ACTION_ZOOM:\n        this.zoom(getMaxZoomRatio(pointers), e);\n        renderable = false;\n        break;\n\n      // Create crop box\n      case ACTION_CROP:\n        if (!range.x || !range.y) {\n          renderable = false;\n          break;\n        }\n\n        offset = getOffset(this.cropper);\n        left = pointer.startX - offset.left;\n        top = pointer.startY - offset.top;\n        width = cropBoxData.minWidth;\n        height = cropBoxData.minHeight;\n\n        if (range.x > 0) {\n          action = range.y > 0 ? ACTION_SOUTH_EAST : ACTION_NORTH_EAST;\n        } else if (range.x < 0) {\n          left -= width;\n          action = range.y > 0 ? ACTION_SOUTH_WEST : ACTION_NORTH_WEST;\n        }\n\n        if (range.y < 0) {\n          top -= height;\n        }\n\n        // Show the crop box if is hidden\n        if (!this.cropped) {\n          removeClass(this.cropBox, CLASS_HIDDEN);\n          this.cropped = true;\n\n          if (this.limited) {\n            this.limitCropBox(true, true);\n          }\n        }\n\n        break;\n\n      default:\n    }\n\n    if (renderable) {\n      cropBoxData.width = width;\n      cropBoxData.height = height;\n      cropBoxData.left = left;\n      cropBoxData.top = top;\n      this.action = action;\n      this.renderCropBox();\n    }\n\n    // Override\n    forEach(pointers, function (p) {\n      p.startX = p.endX;\n      p.startY = p.endY;\n    });\n  }\n};\n\nvar methods = {\n  // Show the crop box manually\n  crop: function crop() {\n    if (this.ready && !this.cropped && !this.disabled) {\n      this.cropped = true;\n      this.limitCropBox(true, true);\n\n      if (this.options.modal) {\n        addClass(this.dragBox, CLASS_MODAL);\n      }\n\n      removeClass(this.cropBox, CLASS_HIDDEN);\n      this.setCropBoxData(this.initialCropBoxData);\n    }\n\n    return this;\n  },\n\n\n  // Reset the image and crop box to their initial states\n  reset: function reset() {\n    if (this.ready && !this.disabled) {\n      this.imageData = assign({}, this.initialImageData);\n      this.canvasData = assign({}, this.initialCanvasData);\n      this.cropBoxData = assign({}, this.initialCropBoxData);\n      this.renderCanvas();\n\n      if (this.cropped) {\n        this.renderCropBox();\n      }\n    }\n\n    return this;\n  },\n\n\n  // Clear the crop box\n  clear: function clear() {\n    if (this.cropped && !this.disabled) {\n      assign(this.cropBoxData, {\n        left: 0,\n        top: 0,\n        width: 0,\n        height: 0\n      });\n\n      this.cropped = false;\n      this.renderCropBox();\n      this.limitCanvas(true, true);\n\n      // Render canvas after crop box rendered\n      this.renderCanvas();\n      removeClass(this.dragBox, CLASS_MODAL);\n      addClass(this.cropBox, CLASS_HIDDEN);\n    }\n\n    return this;\n  },\n\n\n  /**\n   * Replace the image's src and rebuild the cropper\n   * @param {string} url - The new URL.\n   * @param {boolean} [hasSameSize] - Indicate if the new image has the same size as the old one.\n   * @returns {Cropper} this\n   */\n  replace: function replace(url) {\n    var hasSameSize = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n    if (!this.disabled && url) {\n      if (this.isImg) {\n        this.element.src = url;\n      }\n\n      if (hasSameSize) {\n        this.url = url;\n        this.image.src = url;\n\n        if (this.ready) {\n          this.viewBoxImage.src = url;\n\n          forEach(this.previews, function (element) {\n            element.getElementsByTagName('img')[0].src = url;\n          });\n        }\n      } else {\n        if (this.isImg) {\n          this.replaced = true;\n        }\n\n        this.options.data = null;\n        this.uncreate();\n        this.load(url);\n      }\n    }\n\n    return this;\n  },\n\n\n  // Enable (unfreeze) the cropper\n  enable: function enable() {\n    if (this.ready && this.disabled) {\n      this.disabled = false;\n      removeClass(this.cropper, CLASS_DISABLED);\n    }\n\n    return this;\n  },\n\n\n  // Disable (freeze) the cropper\n  disable: function disable() {\n    if (this.ready && !this.disabled) {\n      this.disabled = true;\n      addClass(this.cropper, CLASS_DISABLED);\n    }\n\n    return this;\n  },\n\n\n  /**\n   * Destroy the cropper and remove the instance from the image\n   * @returns {Cropper} this\n   */\n  destroy: function destroy() {\n    var element = this.element;\n\n\n    if (!getData(element, NAMESPACE)) {\n      return this;\n    }\n\n    if (this.isImg && this.replaced) {\n      element.src = this.originalUrl;\n    }\n\n    this.uncreate();\n    removeData(element, NAMESPACE);\n\n    return this;\n  },\n\n\n  /**\n   * Move the canvas with relative offsets\n   * @param {number} offsetX - The relative offset distance on the x-axis.\n   * @param {number} [offsetY=offsetX] - The relative offset distance on the y-axis.\n   * @returns {Cropper} this\n   */\n  move: function move(offsetX) {\n    var offsetY = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : offsetX;\n    var _canvasData = this.canvasData,\n        left = _canvasData.left,\n        top = _canvasData.top;\n\n\n    return this.moveTo(isUndefined(offsetX) ? offsetX : left + Number(offsetX), isUndefined(offsetY) ? offsetY : top + Number(offsetY));\n  },\n\n\n  /**\n   * Move the canvas to an absolute point\n   * @param {number} x - The x-axis coordinate.\n   * @param {number} [y=x] - The y-axis coordinate.\n   * @returns {Cropper} this\n   */\n  moveTo: function moveTo(x) {\n    var y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : x;\n    var canvasData = this.canvasData;\n\n    var changed = false;\n\n    x = Number(x);\n    y = Number(y);\n\n    if (this.ready && !this.disabled && this.options.movable) {\n      if (isNumber(x)) {\n        canvasData.left = x;\n        changed = true;\n      }\n\n      if (isNumber(y)) {\n        canvasData.top = y;\n        changed = true;\n      }\n\n      if (changed) {\n        this.renderCanvas(true);\n      }\n    }\n\n    return this;\n  },\n\n\n  /**\n   * Zoom the canvas with a relative ratio\n   * @param {number} ratio - The target ratio.\n   * @param {Event} _originalEvent - The original event if any.\n   * @returns {Cropper} this\n   */\n  zoom: function zoom(ratio, _originalEvent) {\n    var canvasData = this.canvasData;\n\n\n    ratio = Number(ratio);\n\n    if (ratio < 0) {\n      ratio = 1 / (1 - ratio);\n    } else {\n      ratio = 1 + ratio;\n    }\n\n    return this.zoomTo(canvasData.width * ratio / canvasData.naturalWidth, null, _originalEvent);\n  },\n\n\n  /**\n   * Zoom the canvas to an absolute ratio\n   * @param {number} ratio - The target ratio.\n   * @param {Object} pivot - The zoom pivot point coordinate.\n   * @param {Event} _originalEvent - The original event if any.\n   * @returns {Cropper} this\n   */\n  zoomTo: function zoomTo(ratio, pivot, _originalEvent) {\n    var options = this.options,\n        canvasData = this.canvasData;\n    var width = canvasData.width,\n        height = canvasData.height,\n        naturalWidth = canvasData.naturalWidth,\n        naturalHeight = canvasData.naturalHeight;\n\n\n    ratio = Number(ratio);\n\n    if (ratio >= 0 && this.ready && !this.disabled && options.zoomable) {\n      var newWidth = naturalWidth * ratio;\n      var newHeight = naturalHeight * ratio;\n\n      if (dispatchEvent(this.element, EVENT_ZOOM, {\n        originalEvent: _originalEvent,\n        oldRatio: width / naturalWidth,\n        ratio: newWidth / naturalWidth\n      }) === false) {\n        return this;\n      }\n\n      if (_originalEvent) {\n        var pointers = this.pointers;\n\n        var offset = getOffset(this.cropper);\n        var center = pointers && Object.keys(pointers).length ? getPointersCenter(pointers) : {\n          pageX: _originalEvent.pageX,\n          pageY: _originalEvent.pageY\n        };\n\n        // Zoom from the triggering point of the event\n        canvasData.left -= (newWidth - width) * ((center.pageX - offset.left - canvasData.left) / width);\n        canvasData.top -= (newHeight - height) * ((center.pageY - offset.top - canvasData.top) / height);\n      } else if (isPlainObject(pivot) && isNumber(pivot.x) && isNumber(pivot.y)) {\n        canvasData.left -= (newWidth - width) * ((pivot.x - canvasData.left) / width);\n        canvasData.top -= (newHeight - height) * ((pivot.y - canvasData.top) / height);\n      } else {\n        // Zoom from the center of the canvas\n        canvasData.left -= (newWidth - width) / 2;\n        canvasData.top -= (newHeight - height) / 2;\n      }\n\n      canvasData.width = newWidth;\n      canvasData.height = newHeight;\n      this.renderCanvas(true);\n    }\n\n    return this;\n  },\n\n\n  /**\n   * Rotate the canvas with a relative degree\n   * @param {number} degree - The rotate degree.\n   * @returns {Cropper} this\n   */\n  rotate: function rotate(degree) {\n    return this.rotateTo((this.imageData.rotate || 0) + Number(degree));\n  },\n\n\n  /**\n   * Rotate the canvas to an absolute degree\n   * @param {number} degree - The rotate degree.\n   * @returns {Cropper} this\n   */\n  rotateTo: function rotateTo(degree) {\n    degree = Number(degree);\n\n    if (isNumber(degree) && this.ready && !this.disabled && this.options.rotatable) {\n      this.imageData.rotate = degree % 360;\n      this.renderCanvas(true, true);\n    }\n\n    return this;\n  },\n\n\n  /**\n   * Scale the image on the x-axis.\n   * @param {number} scaleX - The scale ratio on the x-axis.\n   * @returns {Cropper} this\n   */\n  scaleX: function scaleX(_scaleX) {\n    var scaleY = this.imageData.scaleY;\n\n\n    return this.scale(_scaleX, isNumber(scaleY) ? scaleY : 1);\n  },\n\n\n  /**\n   * Scale the image on the y-axis.\n   * @param {number} scaleY - The scale ratio on the y-axis.\n   * @returns {Cropper} this\n   */\n  scaleY: function scaleY(_scaleY) {\n    var scaleX = this.imageData.scaleX;\n\n\n    return this.scale(isNumber(scaleX) ? scaleX : 1, _scaleY);\n  },\n\n\n  /**\n   * Scale the image\n   * @param {number} scaleX - The scale ratio on the x-axis.\n   * @param {number} [scaleY=scaleX] - The scale ratio on the y-axis.\n   * @returns {Cropper} this\n   */\n  scale: function scale(scaleX) {\n    var scaleY = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : scaleX;\n    var imageData = this.imageData;\n\n    var transformed = false;\n\n    scaleX = Number(scaleX);\n    scaleY = Number(scaleY);\n\n    if (this.ready && !this.disabled && this.options.scalable) {\n      if (isNumber(scaleX)) {\n        imageData.scaleX = scaleX;\n        transformed = true;\n      }\n\n      if (isNumber(scaleY)) {\n        imageData.scaleY = scaleY;\n        transformed = true;\n      }\n\n      if (transformed) {\n        this.renderCanvas(true, true);\n      }\n    }\n\n    return this;\n  },\n\n\n  /**\n   * Get the cropped area position and size data (base on the original image)\n   * @param {boolean} [rounded=false] - Indicate if round the data values or not.\n   * @returns {Object} The result cropped data.\n   */\n  getData: function getData$$1() {\n    var rounded = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    var options = this.options,\n        imageData = this.imageData,\n        canvasData = this.canvasData,\n        cropBoxData = this.cropBoxData;\n\n    var data = void 0;\n\n    if (this.ready && this.cropped) {\n      data = {\n        x: cropBoxData.left - canvasData.left,\n        y: cropBoxData.top - canvasData.top,\n        width: cropBoxData.width,\n        height: cropBoxData.height\n      };\n\n      var ratio = imageData.width / imageData.naturalWidth;\n\n      forEach(data, function (n, i) {\n        n /= ratio;\n        data[i] = rounded ? Math.round(n) : n;\n      });\n    } else {\n      data = {\n        x: 0,\n        y: 0,\n        width: 0,\n        height: 0\n      };\n    }\n\n    if (options.rotatable) {\n      data.rotate = imageData.rotate || 0;\n    }\n\n    if (options.scalable) {\n      data.scaleX = imageData.scaleX || 1;\n      data.scaleY = imageData.scaleY || 1;\n    }\n\n    return data;\n  },\n\n\n  /**\n   * Set the cropped area position and size with new data\n   * @param {Object} data - The new data.\n   * @returns {Cropper} this\n   */\n  setData: function setData$$1(data) {\n    var options = this.options,\n        imageData = this.imageData,\n        canvasData = this.canvasData;\n\n    var cropBoxData = {};\n\n    if (this.ready && !this.disabled && isPlainObject(data)) {\n      var transformed = false;\n\n      if (options.rotatable) {\n        if (isNumber(data.rotate) && data.rotate !== imageData.rotate) {\n          imageData.rotate = data.rotate;\n          transformed = true;\n        }\n      }\n\n      if (options.scalable) {\n        if (isNumber(data.scaleX) && data.scaleX !== imageData.scaleX) {\n          imageData.scaleX = data.scaleX;\n          transformed = true;\n        }\n\n        if (isNumber(data.scaleY) && data.scaleY !== imageData.scaleY) {\n          imageData.scaleY = data.scaleY;\n          transformed = true;\n        }\n      }\n\n      if (transformed) {\n        this.renderCanvas(true, true);\n      }\n\n      var ratio = imageData.width / imageData.naturalWidth;\n\n      if (isNumber(data.x)) {\n        cropBoxData.left = data.x * ratio + canvasData.left;\n      }\n\n      if (isNumber(data.y)) {\n        cropBoxData.top = data.y * ratio + canvasData.top;\n      }\n\n      if (isNumber(data.width)) {\n        cropBoxData.width = data.width * ratio;\n      }\n\n      if (isNumber(data.height)) {\n        cropBoxData.height = data.height * ratio;\n      }\n\n      this.setCropBoxData(cropBoxData);\n    }\n\n    return this;\n  },\n\n\n  /**\n   * Get the container size data.\n   * @returns {Object} The result container data.\n   */\n  getContainerData: function getContainerData() {\n    return this.ready ? assign({}, this.containerData) : {};\n  },\n\n\n  /**\n   * Get the image position and size data.\n   * @returns {Object} The result image data.\n   */\n  getImageData: function getImageData() {\n    return this.sized ? assign({}, this.imageData) : {};\n  },\n\n\n  /**\n   * Get the canvas position and size data.\n   * @returns {Object} The result canvas data.\n   */\n  getCanvasData: function getCanvasData() {\n    var canvasData = this.canvasData;\n\n    var data = {};\n\n    if (this.ready) {\n      forEach(['left', 'top', 'width', 'height', 'naturalWidth', 'naturalHeight'], function (n) {\n        data[n] = canvasData[n];\n      });\n    }\n\n    return data;\n  },\n\n\n  /**\n   * Set the canvas position and size with new data.\n   * @param {Object} data - The new canvas data.\n   * @returns {Cropper} this\n   */\n  setCanvasData: function setCanvasData(data) {\n    var canvasData = this.canvasData;\n    var aspectRatio = canvasData.aspectRatio;\n\n\n    if (this.ready && !this.disabled && isPlainObject(data)) {\n      if (isNumber(data.left)) {\n        canvasData.left = data.left;\n      }\n\n      if (isNumber(data.top)) {\n        canvasData.top = data.top;\n      }\n\n      if (isNumber(data.width)) {\n        canvasData.width = data.width;\n        canvasData.height = data.width / aspectRatio;\n      } else if (isNumber(data.height)) {\n        canvasData.height = data.height;\n        canvasData.width = data.height * aspectRatio;\n      }\n\n      this.renderCanvas(true);\n    }\n\n    return this;\n  },\n\n\n  /**\n   * Get the crop box position and size data.\n   * @returns {Object} The result crop box data.\n   */\n  getCropBoxData: function getCropBoxData() {\n    var cropBoxData = this.cropBoxData;\n\n    var data = void 0;\n\n    if (this.ready && this.cropped) {\n      data = {\n        left: cropBoxData.left,\n        top: cropBoxData.top,\n        width: cropBoxData.width,\n        height: cropBoxData.height\n      };\n    }\n\n    return data || {};\n  },\n\n\n  /**\n   * Set the crop box position and size with new data.\n   * @param {Object} data - The new crop box data.\n   * @returns {Cropper} this\n   */\n  setCropBoxData: function setCropBoxData(data) {\n    var cropBoxData = this.cropBoxData;\n    var aspectRatio = this.options.aspectRatio;\n\n    var widthChanged = void 0;\n    var heightChanged = void 0;\n\n    if (this.ready && this.cropped && !this.disabled && isPlainObject(data)) {\n      if (isNumber(data.left)) {\n        cropBoxData.left = data.left;\n      }\n\n      if (isNumber(data.top)) {\n        cropBoxData.top = data.top;\n      }\n\n      if (isNumber(data.width) && data.width !== cropBoxData.width) {\n        widthChanged = true;\n        cropBoxData.width = data.width;\n      }\n\n      if (isNumber(data.height) && data.height !== cropBoxData.height) {\n        heightChanged = true;\n        cropBoxData.height = data.height;\n      }\n\n      if (aspectRatio) {\n        if (widthChanged) {\n          cropBoxData.height = cropBoxData.width / aspectRatio;\n        } else if (heightChanged) {\n          cropBoxData.width = cropBoxData.height * aspectRatio;\n        }\n      }\n\n      this.renderCropBox();\n    }\n\n    return this;\n  },\n\n\n  /**\n   * Get a canvas drawn the cropped image.\n   * @param {Object} [options={}] - The config options.\n   * @returns {HTMLCanvasElement} - The result canvas.\n   */\n  getCroppedCanvas: function getCroppedCanvas() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    if (!this.ready || !window.HTMLCanvasElement) {\n      return null;\n    }\n\n    var canvasData = this.canvasData;\n\n    var source = getSourceCanvas(this.image, this.imageData, canvasData, options);\n\n    // Returns the source canvas if it is not cropped.\n    if (!this.cropped) {\n      return source;\n    }\n\n    var _getData = this.getData(),\n        initialX = _getData.x,\n        initialY = _getData.y,\n        initialWidth = _getData.width,\n        initialHeight = _getData.height;\n\n    var ratio = source.width / Math.floor(canvasData.naturalWidth);\n\n    if (ratio !== 1) {\n      initialX *= ratio;\n      initialY *= ratio;\n      initialWidth *= ratio;\n      initialHeight *= ratio;\n    }\n\n    var aspectRatio = initialWidth / initialHeight;\n    var maxSizes = getAdjustedSizes({\n      aspectRatio: aspectRatio,\n      width: options.maxWidth || Infinity,\n      height: options.maxHeight || Infinity\n    });\n    var minSizes = getAdjustedSizes({\n      aspectRatio: aspectRatio,\n      width: options.minWidth || 0,\n      height: options.minHeight || 0\n    }, 'cover');\n\n    var _getAdjustedSizes = getAdjustedSizes({\n      aspectRatio: aspectRatio,\n      width: options.width || (ratio !== 1 ? source.width : initialWidth),\n      height: options.height || (ratio !== 1 ? source.height : initialHeight)\n    }),\n        width = _getAdjustedSizes.width,\n        height = _getAdjustedSizes.height;\n\n    width = Math.min(maxSizes.width, Math.max(minSizes.width, width));\n    height = Math.min(maxSizes.height, Math.max(minSizes.height, height));\n\n    var canvas = document.createElement('canvas');\n    var context = canvas.getContext('2d');\n\n    canvas.width = normalizeDecimalNumber(width);\n    canvas.height = normalizeDecimalNumber(height);\n\n    context.fillStyle = options.fillColor || 'transparent';\n    context.fillRect(0, 0, width, height);\n\n    var _options$imageSmoothi = options.imageSmoothingEnabled,\n        imageSmoothingEnabled = _options$imageSmoothi === undefined ? true : _options$imageSmoothi,\n        imageSmoothingQuality = options.imageSmoothingQuality;\n\n\n    context.imageSmoothingEnabled = imageSmoothingEnabled;\n\n    if (imageSmoothingQuality) {\n      context.imageSmoothingQuality = imageSmoothingQuality;\n    }\n\n    // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D.drawImage\n    var sourceWidth = source.width;\n    var sourceHeight = source.height;\n\n    // Source canvas parameters\n    var srcX = initialX;\n    var srcY = initialY;\n    var srcWidth = void 0;\n    var srcHeight = void 0;\n\n    // Destination canvas parameters\n    var dstX = void 0;\n    var dstY = void 0;\n    var dstWidth = void 0;\n    var dstHeight = void 0;\n\n    if (srcX <= -initialWidth || srcX > sourceWidth) {\n      srcX = 0;\n      srcWidth = 0;\n      dstX = 0;\n      dstWidth = 0;\n    } else if (srcX <= 0) {\n      dstX = -srcX;\n      srcX = 0;\n      srcWidth = Math.min(sourceWidth, initialWidth + srcX);\n      dstWidth = srcWidth;\n    } else if (srcX <= sourceWidth) {\n      dstX = 0;\n      srcWidth = Math.min(initialWidth, sourceWidth - srcX);\n      dstWidth = srcWidth;\n    }\n\n    if (srcWidth <= 0 || srcY <= -initialHeight || srcY > sourceHeight) {\n      srcY = 0;\n      srcHeight = 0;\n      dstY = 0;\n      dstHeight = 0;\n    } else if (srcY <= 0) {\n      dstY = -srcY;\n      srcY = 0;\n      srcHeight = Math.min(sourceHeight, initialHeight + srcY);\n      dstHeight = srcHeight;\n    } else if (srcY <= sourceHeight) {\n      dstY = 0;\n      srcHeight = Math.min(initialHeight, sourceHeight - srcY);\n      dstHeight = srcHeight;\n    }\n\n    // All the numerical parameters should be integer for `drawImage`\n    // https://github.com/fengyuanchen/cropper/issues/476\n    var params = [srcX, srcY, srcWidth, srcHeight];\n\n    // Avoid \"IndexSizeError\"\n    if (dstWidth > 0 && dstHeight > 0) {\n      var scale = width / initialWidth;\n\n      params.push(dstX * scale, dstY * scale, dstWidth * scale, dstHeight * scale);\n    }\n\n    context.drawImage.apply(context, [source].concat(toConsumableArray(params.map(function (param) {\n      return Math.floor(normalizeDecimalNumber(param));\n    }))));\n\n    return canvas;\n  },\n\n\n  /**\n   * Change the aspect ratio of the crop box.\n   * @param {number} aspectRatio - The new aspect ratio.\n   * @returns {Cropper} this\n   */\n  setAspectRatio: function setAspectRatio(aspectRatio) {\n    var options = this.options;\n\n\n    if (!this.disabled && !isUndefined(aspectRatio)) {\n      // 0 -> NaN\n      options.aspectRatio = Math.max(0, aspectRatio) || NaN;\n\n      if (this.ready) {\n        this.initCropBox();\n\n        if (this.cropped) {\n          this.renderCropBox();\n        }\n      }\n    }\n\n    return this;\n  },\n\n\n  /**\n   * Change the drag mode.\n   * @param {string} mode - The new drag mode.\n   * @returns {Cropper} this\n   */\n  setDragMode: function setDragMode(mode) {\n    var options = this.options,\n        dragBox = this.dragBox,\n        face = this.face;\n\n\n    if (this.ready && !this.disabled) {\n      var croppable = mode === DRAG_MODE_CROP;\n      var movable = options.movable && mode === DRAG_MODE_MOVE;\n\n      mode = croppable || movable ? mode : DRAG_MODE_NONE;\n\n      options.dragMode = mode;\n      setData(dragBox, DATA_ACTION, mode);\n      toggleClass(dragBox, CLASS_CROP, croppable);\n      toggleClass(dragBox, CLASS_MOVE, movable);\n\n      if (!options.cropBoxMovable) {\n        // Sync drag mode to crop box when it is not movable\n        setData(face, DATA_ACTION, mode);\n        toggleClass(face, CLASS_CROP, croppable);\n        toggleClass(face, CLASS_MOVE, movable);\n      }\n    }\n\n    return this;\n  }\n};\n\nvar AnotherCropper = WINDOW.Cropper;\n\nvar Cropper = function () {\n  /**\n   * Create a new Cropper.\n   * @param {Element} element - The target element for cropping.\n   * @param {Object} [options={}] - The configuration options.\n   */\n  function Cropper(element) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck(this, Cropper);\n\n    if (!element || !REGEXP_TAG_NAME.test(element.tagName)) {\n      throw new Error('The first argument is required and must be an <img> or <canvas> element.');\n    }\n\n    this.element = element;\n    this.options = assign({}, DEFAULTS, isPlainObject(options) && options);\n    this.cropped = false;\n    this.disabled = false;\n    this.pointers = {};\n    this.ready = false;\n    this.reloading = false;\n    this.replaced = false;\n    this.sized = false;\n    this.sizing = false;\n    this.init();\n  }\n\n  createClass(Cropper, [{\n    key: 'init',\n    value: function init() {\n      var element = this.element;\n\n      var tagName = element.tagName.toLowerCase();\n      var url = void 0;\n\n      if (getData(element, NAMESPACE)) {\n        return;\n      }\n\n      setData(element, NAMESPACE, this);\n\n      if (tagName === 'img') {\n        this.isImg = true;\n\n        // e.g.: \"img/picture.jpg\"\n        url = element.getAttribute('src') || '';\n        this.originalUrl = url;\n\n        // Stop when it's a blank image\n        if (!url) {\n          return;\n        }\n\n        // e.g.: \"http://example.com/img/picture.jpg\"\n        url = element.src;\n      } else if (tagName === 'canvas' && window.HTMLCanvasElement) {\n        url = element.toDataURL();\n      }\n\n      this.load(url);\n    }\n  }, {\n    key: 'load',\n    value: function load(url) {\n      var _this = this;\n\n      if (!url) {\n        return;\n      }\n\n      this.url = url;\n      this.imageData = {};\n\n      var element = this.element,\n          options = this.options;\n\n\n      if (!options.checkOrientation || !window.ArrayBuffer) {\n        this.clone();\n        return;\n      }\n\n      // XMLHttpRequest disallows to open a Data URL in some browsers like IE11 and Safari\n      if (REGEXP_DATA_URL.test(url)) {\n        if (REGEXP_DATA_URL_JPEG.test(url)) {\n          this.read(dataURLToArrayBuffer(url));\n        } else {\n          this.clone();\n        }\n\n        return;\n      }\n\n      var xhr = new XMLHttpRequest();\n\n      this.reloading = true;\n      this.xhr = xhr;\n\n      var done = function done() {\n        _this.reloading = false;\n        _this.xhr = null;\n      };\n\n      xhr.ontimeout = done;\n      xhr.onabort = done;\n      xhr.onerror = function () {\n        done();\n        _this.clone();\n      };\n\n      xhr.onload = function () {\n        done();\n        _this.read(xhr.response);\n      };\n\n      // Bust cache when there is a \"crossOrigin\" property\n      if (options.checkCrossOrigin && isCrossOriginURL(url) && element.crossOrigin) {\n        url = addTimestamp(url);\n      }\n\n      xhr.open('get', url);\n      xhr.responseType = 'arraybuffer';\n      xhr.withCredentials = element.crossOrigin === 'use-credentials';\n      xhr.send();\n    }\n  }, {\n    key: 'read',\n    value: function read(arrayBuffer) {\n      var options = this.options,\n          imageData = this.imageData;\n\n      var orientation = getOrientation(arrayBuffer);\n      var rotate = 0;\n      var scaleX = 1;\n      var scaleY = 1;\n\n      if (orientation > 1) {\n        this.url = arrayBufferToDataURL(arrayBuffer, 'image/jpeg');\n\n        var _parseOrientation = parseOrientation(orientation);\n\n        rotate = _parseOrientation.rotate;\n        scaleX = _parseOrientation.scaleX;\n        scaleY = _parseOrientation.scaleY;\n      }\n\n      if (options.rotatable) {\n        imageData.rotate = rotate;\n      }\n\n      if (options.scalable) {\n        imageData.scaleX = scaleX;\n        imageData.scaleY = scaleY;\n      }\n\n      this.clone();\n    }\n  }, {\n    key: 'clone',\n    value: function clone() {\n      var element = this.element,\n          url = this.url;\n\n      var crossOrigin = void 0;\n      var crossOriginUrl = void 0;\n\n      if (this.options.checkCrossOrigin && isCrossOriginURL(url)) {\n        crossOrigin = element.crossOrigin;\n\n\n        if (crossOrigin) {\n          crossOriginUrl = url;\n        } else {\n          crossOrigin = 'anonymous';\n\n          // Bust cache when there is not a \"crossOrigin\" property\n          crossOriginUrl = addTimestamp(url);\n        }\n      }\n\n      this.crossOrigin = crossOrigin;\n      this.crossOriginUrl = crossOriginUrl;\n\n      var image = document.createElement('img');\n\n      if (crossOrigin) {\n        image.crossOrigin = crossOrigin;\n      }\n\n      image.src = crossOriginUrl || url;\n\n      var start = this.start.bind(this);\n      var stop = this.stop.bind(this);\n\n      this.image = image;\n      this.onStart = start;\n      this.onStop = stop;\n\n      if (this.isImg) {\n        if (element.complete) {\n          // start asynchronously to keep `this.cropper` is accessible in `ready` event handler.\n          this.timeout = setTimeout(start, 0);\n        } else {\n          addListener(element, EVENT_LOAD, start, {\n            once: true\n          });\n        }\n      } else {\n        image.onload = start;\n        image.onerror = stop;\n        addClass(image, CLASS_HIDE);\n        element.parentNode.insertBefore(image, element.nextSibling);\n      }\n    }\n  }, {\n    key: 'start',\n    value: function start(event) {\n      var _this2 = this;\n\n      var image = this.isImg ? this.element : this.image;\n\n      if (event) {\n        image.onload = null;\n        image.onerror = null;\n      }\n\n      this.sizing = true;\n\n      var IS_SAFARI = WINDOW.navigator && /(Macintosh|iPhone|iPod|iPad).*AppleWebKit/i.test(WINDOW.navigator.userAgent);\n      var done = function done(naturalWidth, naturalHeight) {\n        assign(_this2.imageData, {\n          naturalWidth: naturalWidth,\n          naturalHeight: naturalHeight,\n          aspectRatio: naturalWidth / naturalHeight\n        });\n        _this2.sizing = false;\n        _this2.sized = true;\n        _this2.build();\n      };\n\n      // Modern browsers (except Safari)\n      if (image.naturalWidth && !IS_SAFARI) {\n        done(image.naturalWidth, image.naturalHeight);\n        return;\n      }\n\n      var sizingImage = document.createElement('img');\n      var body = document.body || document.documentElement;\n\n      this.sizingImage = sizingImage;\n\n      sizingImage.onload = function () {\n        done(sizingImage.width, sizingImage.height);\n\n        if (!IS_SAFARI) {\n          body.removeChild(sizingImage);\n        }\n      };\n\n      sizingImage.src = image.src;\n\n      // iOS Safari will convert the image automatically\n      // with its orientation once append it into DOM (#279)\n      if (!IS_SAFARI) {\n        sizingImage.style.cssText = 'left:0;' + 'max-height:none!important;' + 'max-width:none!important;' + 'min-height:0!important;' + 'min-width:0!important;' + 'opacity:0;' + 'position:absolute;' + 'top:0;' + 'z-index:-1;';\n        body.appendChild(sizingImage);\n      }\n    }\n  }, {\n    key: 'stop',\n    value: function stop() {\n      var image = this.image;\n\n\n      image.onload = null;\n      image.onerror = null;\n      image.parentNode.removeChild(image);\n      this.image = null;\n    }\n  }, {\n    key: 'build',\n    value: function build() {\n      if (!this.sized || this.ready) {\n        return;\n      }\n\n      var element = this.element,\n          options = this.options,\n          image = this.image;\n\n      // Create cropper elements\n\n      var container = element.parentNode;\n      var template = document.createElement('div');\n\n      template.innerHTML = TEMPLATE;\n\n      var cropper = template.querySelector('.' + NAMESPACE + '-container');\n      var canvas = cropper.querySelector('.' + NAMESPACE + '-canvas');\n      var dragBox = cropper.querySelector('.' + NAMESPACE + '-drag-box');\n      var cropBox = cropper.querySelector('.' + NAMESPACE + '-crop-box');\n      var face = cropBox.querySelector('.' + NAMESPACE + '-face');\n\n      this.container = container;\n      this.cropper = cropper;\n      this.canvas = canvas;\n      this.dragBox = dragBox;\n      this.cropBox = cropBox;\n      this.viewBox = cropper.querySelector('.' + NAMESPACE + '-view-box');\n      this.face = face;\n\n      canvas.appendChild(image);\n\n      // Hide the original image\n      addClass(element, CLASS_HIDDEN);\n\n      // Inserts the cropper after to the current image\n      container.insertBefore(cropper, element.nextSibling);\n\n      // Show the image if is hidden\n      if (!this.isImg) {\n        removeClass(image, CLASS_HIDE);\n      }\n\n      this.initPreview();\n      this.bind();\n\n      options.aspectRatio = Math.max(0, options.aspectRatio) || NaN;\n      options.viewMode = Math.max(0, Math.min(3, Math.round(options.viewMode))) || 0;\n\n      addClass(cropBox, CLASS_HIDDEN);\n\n      if (!options.guides) {\n        addClass(cropBox.getElementsByClassName(NAMESPACE + '-dashed'), CLASS_HIDDEN);\n      }\n\n      if (!options.center) {\n        addClass(cropBox.getElementsByClassName(NAMESPACE + '-center'), CLASS_HIDDEN);\n      }\n\n      if (options.background) {\n        addClass(cropper, NAMESPACE + '-bg');\n      }\n\n      if (!options.highlight) {\n        addClass(face, CLASS_INVISIBLE);\n      }\n\n      if (options.cropBoxMovable) {\n        addClass(face, CLASS_MOVE);\n        setData(face, DATA_ACTION, ACTION_ALL);\n      }\n\n      if (!options.cropBoxResizable) {\n        addClass(cropBox.getElementsByClassName(NAMESPACE + '-line'), CLASS_HIDDEN);\n        addClass(cropBox.getElementsByClassName(NAMESPACE + '-point'), CLASS_HIDDEN);\n      }\n\n      this.render();\n      this.ready = true;\n      this.setDragMode(options.dragMode);\n\n      if (options.autoCrop) {\n        this.crop();\n      }\n\n      this.setData(options.data);\n\n      if (isFunction(options.ready)) {\n        addListener(element, EVENT_READY, options.ready, {\n          once: true\n        });\n      }\n\n      dispatchEvent(element, EVENT_READY);\n    }\n  }, {\n    key: 'unbuild',\n    value: function unbuild() {\n      if (!this.ready) {\n        return;\n      }\n\n      this.ready = false;\n      this.unbind();\n      this.resetPreview();\n      this.cropper.parentNode.removeChild(this.cropper);\n      removeClass(this.element, CLASS_HIDDEN);\n    }\n  }, {\n    key: 'uncreate',\n    value: function uncreate() {\n      var element = this.element;\n\n\n      if (this.ready) {\n        this.unbuild();\n        this.ready = false;\n        this.cropped = false;\n      } else if (this.sizing) {\n        this.sizingImage.onload = null;\n        this.sizing = false;\n        this.sized = false;\n      } else if (this.reloading) {\n        this.xhr.abort();\n      } else if (this.isImg) {\n        if (element.complete) {\n          clearTimeout(this.timeout);\n        } else {\n          removeListener(element, EVENT_LOAD, this.onStart);\n        }\n      } else if (this.image) {\n        this.stop();\n      }\n    }\n\n    /**\n     * Get the no conflict cropper class.\n     * @returns {Cropper} The cropper class.\n     */\n\n  }], [{\n    key: 'noConflict',\n    value: function noConflict() {\n      window.Cropper = AnotherCropper;\n      return Cropper;\n    }\n\n    /**\n     * Change the default options.\n     * @param {Object} options - The new default options.\n     */\n\n  }, {\n    key: 'setDefaults',\n    value: function setDefaults(options) {\n      assign(DEFAULTS, isPlainObject(options) && options);\n    }\n  }]);\n  return Cropper;\n}();\n\nassign(Cropper.prototype, render, preview, events, handlers, change, methods);\n\nexport default Cropper;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/cropperjs/dist/cropper.esm.js\n// module id = null\n// module chunks = ","<template>\r\n    <div class=\"wrap\">\r\n    \t<img class=\"head-image\" ref=\"userImage\" :src=\"userImage\" alt=\"图像\" />\r\n    \t<div class=\"bottom-btn\">\r\n    \t\t<p class=\"cancel\" @click=\"$router.go(-1);\">取消</p>\r\n    \t\t<p class=\"confirm\" @click=\"uploadImage\">选取</p>\r\n    \t</div>\r\n    </div>\r\n</template>\r\n<script>\r\nimport Cropper from 'cropperjs'\r\nimport { Toast,Indicator } from 'mint-ui';\r\n\r\nimport { userAvatar } from '@/service/user';\r\n\r\nexport default {\r\n    data() {\r\n        return {\r\n        \tagencysInfo: this.$route.params.agencysInfo,// 机构信息\r\n        \tuserImage: '',//用户头像\r\n        \tcropper: '',\r\n            imgWidth: 0,\r\n            imgHeight: 0,\r\n            startX: 0,\r\n            startY: 0,\r\n\r\n        }\r\n    },\r\n    created: function () {\r\n        let imageInfo = this.$route.params.imageInfo;\r\n        if (imageInfo !== undefined) {\r\n        \tthis.userImage = window.URL.createObjectURL(imageInfo);\r\n        }else{\r\n            this.$router.go(-1)\r\n        }\r\n    },\r\n    mounted: function () {\r\n        // 获取作用域\r\n        let _this = this;\r\n    \tlet image = this.$refs.userImage;\r\n        // 实例化插件\r\n    \tthis.cropper = new Cropper(image, {\r\n    \t\tviewMode: 1,  \r\n    \t\taspectRatio: 1,//图像的纵横比\r\n    \t\tautoCropArea: 1,//自动裁剪面积大小(百分比)\r\n    \t\tdragMode: 'move',//裁剪框只允许托单\r\n    \t\tbackground: false,//不显示网格背景\r\n    \t\tguides: false,//不显示虚线\r\n    \t\tcropBoxMovable: false,//不允许拖动裁剪框\r\n    \t\tcropBoxResizable: false,//不允通过拖动改变裁剪框大小\r\n            crop: function(e) {\r\n                _this.imgWidth = e.detail.width;\r\n                _this.imgHeight = e.detail.height;\r\n                _this.startX = e.detail.x;\r\n                _this.startY = e.detail.y;\r\n    \t\t}   \r\n    \t});\r\n    },\r\n    methods: {\r\n    \tuploadImage: async function () {\r\n            let imgFile = this.$route.params.imageInfo;\r\n            Indicator.open();\r\n            //判断水平起始点是否为负数\r\n            if (this.startX < 0) {\r\n                this.startX = 0;\r\n            }\r\n            let res = await userAvatar(this.agencysInfo.id,imgFile,this.imgWidth,this.imgHeight,this.startX,this.startY);\r\n            Indicator.close();\r\n            if (res.errCode === 0) {\r\n                this.$router.go(-1);\r\n            }else if (res.errCode === 10003 || res.errCode === 10005) {\r\n                this.tokenOutOfDate();\r\n            }else{\r\n                Toast('修改头像失败');\r\n            }\r\n    \t}\r\n    }\r\n}\r\n</script>\r\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\r\n<style lang=\"scss\" scoped>\r\n.wrap{\r\n    max-height: 100vh;\r\n    background-color: #000000;\r\n    position: relative;\r\n    .bottom-btn{\r\n    \tdisplay: flex;\r\n    \tjustify-content: space-between;\r\n    \talign-items: center;\r\n    \twidth: 750px;\r\n    \theight: 120px;\r\n    \tbackground-color: #0b0b0b;\r\n    \tpadding: 0 30px;\r\n    \tposition: fixed;\r\n    \tbottom: 0;\r\n    \tp{\r\n    \t\tfont-size: 36px;\r\n    \t\tcolor: #ffffff;\r\n    \t\tcursor: pointer;\r\n    \t}\r\n    }\r\n}\r\n</style>\n\n\n// WEBPACK FOOTER //\n// src/views/user/personalImage.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"wrap\"},[_c('img',{ref:\"userImage\",staticClass:\"head-image\",attrs:{\"src\":_vm.userImage,\"alt\":\"图像\"}}),_vm._v(\" \"),_c('div',{staticClass:\"bottom-btn\"},[_c('p',{staticClass:\"cancel\",on:{\"click\":function($event){_vm.$router.go(-1);}}},[_vm._v(\"取消\")]),_vm._v(\" \"),_c('p',{staticClass:\"confirm\",on:{\"click\":_vm.uploadImage}},[_vm._v(\"选取\")])])])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-77f03ba2\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/views/user/personalImage.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-77f03ba2\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!px2rem-loader?{\\\"remUnit\\\":75}!sass-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./personalImage.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./personalImage.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-77f03ba2\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./personalImage.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-77f03ba2\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/user/personalImage.vue\n// module id = null\n// module chunks = ","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(true);\n// imports\n\n\n// module\nexports.push([module.id, \"\\n.wrap[data-v-77f03ba2] {\\n  max-height: 100vh;\\n  background-color: #000000;\\n  position: relative;\\n}\\n.wrap .bottom-btn[data-v-77f03ba2] {\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-pack: justify;\\n      -ms-flex-pack: justify;\\n          justify-content: space-between;\\n  -webkit-box-align: center;\\n      -ms-flex-align: center;\\n          align-items: center;\\n  width: 10rem;\\n  height: 1.6rem;\\n  background-color: #0b0b0b;\\n  padding: 0 0.4rem;\\n  position: fixed;\\n  bottom: 0;\\n}\\n.wrap .bottom-btn p[data-v-77f03ba2] {\\n  font-size: 0.48rem;\\n  color: #ffffff;\\n  cursor: pointer;\\n}\", \"\", {\"version\":3,\"sources\":[\"D:/项目文件/demo/palm-h5/src/views/user/personalImage.vue\"],\"names\":[],\"mappings\":\";AACA;EACE,kBAAkB;EAClB,0BAA0B;EAC1B,mBAAmB;CACpB;AACD;EACE,qBAAqB;EACrB,qBAAqB;EACrB,cAAc;EACd,0BAA0B;MACtB,uBAAuB;UACnB,+BAA+B;EACvC,0BAA0B;MACtB,uBAAuB;UACnB,oBAAoB;EAC5B,aAAa;EACb,eAAe;EACf,0BAA0B;EAC1B,kBAAkB;EAClB,gBAAgB;EAChB,UAAU;CACX;AACD;EACE,mBAAmB;EACnB,eAAe;EACf,gBAAgB;CACjB\",\"file\":\"personalImage.vue\",\"sourcesContent\":[\"\\n.wrap[data-v-77f03ba2] {\\n  max-height: 100vh;\\n  background-color: #000000;\\n  position: relative;\\n}\\n.wrap .bottom-btn[data-v-77f03ba2] {\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-pack: justify;\\n      -ms-flex-pack: justify;\\n          justify-content: space-between;\\n  -webkit-box-align: center;\\n      -ms-flex-align: center;\\n          align-items: center;\\n  width: 10rem;\\n  height: 1.6rem;\\n  background-color: #0b0b0b;\\n  padding: 0 0.4rem;\\n  position: fixed;\\n  bottom: 0;\\n}\\n.wrap .bottom-btn p[data-v-77f03ba2] {\\n  font-size: 0.48rem;\\n  color: #ffffff;\\n  cursor: pointer;\\n}\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader?{\"sourceMap\":true}!./node_modules/vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-77f03ba2\",\"scoped\":true,\"hasInlineConfig\":false}!./node_modules/px2rem-loader?{\"remUnit\":75}!./node_modules/sass-loader/lib/loader.js?{\"sourceMap\":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./src/views/user/personalImage.vue\n// module id = ibfF\n// module chunks = 21","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../node_modules/css-loader/index.js?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index.js?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-77f03ba2\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/px2rem-loader/index.js?{\\\"remUnit\\\":75}!../../../node_modules/sass-loader/lib/loader.js?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./personalImage.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = require(\"!../../../node_modules/vue-style-loader/lib/addStylesClient.js\")(\"6bd3770c\", content, true);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/extract-text-webpack-plugin/dist/loader.js?{\"omit\":1,\"remove\":true}!./node_modules/vue-style-loader!./node_modules/css-loader?{\"sourceMap\":true}!./node_modules/vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-77f03ba2\",\"scoped\":true,\"hasInlineConfig\":false}!./node_modules/px2rem-loader?{\"remUnit\":75}!./node_modules/sass-loader/lib/loader.js?{\"sourceMap\":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./src/views/user/personalImage.vue\n// module id = o0oJ\n// module chunks = 21"],"sourceRoot":""}